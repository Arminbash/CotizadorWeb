//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CotizadorWeb.Domain.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERP_MSCORPEntities : DbContext
    {
        public ERP_MSCORPEntities()
            : base(Conexion.GetConnection().ToString())
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<AprobarGastosOperativos> AprobarGastosOperativos { get; set; }
        public virtual DbSet<AsignacionCajaChica> AsignacionCajaChica { get; set; }
        public virtual DbSet<AsignarMontoCajaChica> AsignarMontoCajaChica { get; set; }
        public virtual DbSet<BitacoraCobranza> BitacoraCobranza { get; set; }
        public virtual DbSet<CatalogoConcepto> CatalogoConcepto { get; set; }
        public virtual DbSet<CatalogoCuenta> CatalogoCuenta { get; set; }
        public virtual DbSet<CategoriaDescripcionConceptoCajaChica> CategoriaDescripcionConceptoCajaChica { get; set; }
        public virtual DbSet<ConceptoMinutaDeposito> ConceptoMinutaDeposito { get; set; }
        public virtual DbSet<ConceptoNotaCredito> ConceptoNotaCredito { get; set; }
        public virtual DbSet<ConceptoNotaCreditoProveedor> ConceptoNotaCreditoProveedor { get; set; }
        public virtual DbSet<ConceptoNotasDebitoProveedor> ConceptoNotasDebitoProveedor { get; set; }
        public virtual DbSet<ConfiguracionFIN> ConfiguracionFIN { get; set; }
        public virtual DbSet<CorreoDepartamento> CorreoDepartamento { get; set; }
        public virtual DbSet<Criterio_Cobranza> Criterio_Cobranza { get; set; }
        public virtual DbSet<Criterio_Proveedor> Criterio_Proveedor { get; set; }
        public virtual DbSet<CuentaBanco> CuentaBanco { get; set; }
        public virtual DbSet<DescripcionConceptoCaja> DescripcionConceptoCaja { get; set; }
        public virtual DbSet<DetalleNotaCreditoProveedor> DetalleNotaCreditoProveedor { get; set; }
        public virtual DbSet<DetalleNotasDebito> DetalleNotasDebito { get; set; }
        public virtual DbSet<DetalleNotasDebitoCredito> DetalleNotasDebitoCredito { get; set; }
        public virtual DbSet<DetalleNotasDebitoProveedor> DetalleNotasDebitoProveedor { get; set; }
        public virtual DbSet<DetallePagoRealizadoTesoreria> DetallePagoRealizadoTesoreria { get; set; }
        public virtual DbSet<DetalleReciboCajaChica> DetalleReciboCajaChica { get; set; }
        public virtual DbSet<DetalleSolicitudCheque> DetalleSolicitudCheque { get; set; }
        public virtual DbSet<DetalleSolicitudGO> DetalleSolicitudGO { get; set; }
        public virtual DbSet<DetalleSolicitudPagoReciboCajaChica> DetalleSolicitudPagoReciboCajaChica { get; set; }
        public virtual DbSet<DistribucionGastosOperativos> DistribucionGastosOperativos { get; set; }
        public virtual DbSet<GastosOperativos> GastosOperativos { get; set; }
        public virtual DbSet<MinutaDeposito> MinutaDeposito { get; set; }
        public virtual DbSet<MovimientoBancario> MovimientoBancario { get; set; }
        public virtual DbSet<NotaCreditoProveedor> NotaCreditoProveedor { get; set; }
        public virtual DbSet<NotasCredito> NotasCredito { get; set; }
        public virtual DbSet<NotasCreditoAplicadas> NotasCreditoAplicadas { get; set; }
        public virtual DbSet<NotasDebito> NotasDebito { get; set; }
        public virtual DbSet<NotasDebitoCredito> NotasDebitoCredito { get; set; }
        public virtual DbSet<NotasDebitoProveedor> NotasDebitoProveedor { get; set; }
        public virtual DbSet<PagoRealizadoTesoreria> PagoRealizadoTesoreria { get; set; }
        public virtual DbSet<ReciboCajaChica> ReciboCajaChica { get; set; }
        public virtual DbSet<SolicitudCheque> SolicitudCheque { get; set; }
        public virtual DbSet<SolicitudGastosOperativos> SolicitudGastosOperativos { get; set; }
        public virtual DbSet<SolicitudPagoCajaChica> SolicitudPagoCajaChica { get; set; }
        public virtual DbSet<SolicitudReciboReembolso> SolicitudReciboReembolso { get; set; }
        public virtual DbSet<SolicitudReembolsoCajaChica> SolicitudReembolsoCajaChica { get; set; }
        public virtual DbSet<Accesorio> Accesorio { get; set; }
        public virtual DbSet<AccesorioFlota> AccesorioFlota { get; set; }
        public virtual DbSet<ActivacionConductor> ActivacionConductor { get; set; }
        public virtual DbSet<ActivacionFlota> ActivacionFlota { get; set; }
        public virtual DbSet<AprobarCotizacionMantenimiento> AprobarCotizacionMantenimiento { get; set; }
        public virtual DbSet<AsignarConductoresVehiculos> AsignarConductoresVehiculos { get; set; }
        public virtual DbSet<CategoriaAccesorio> CategoriaAccesorio { get; set; }
        public virtual DbSet<Combustible> Combustible { get; set; }
        public virtual DbSet<Conductores> Conductores { get; set; }
        public virtual DbSet<ConfirmarMantenimiento> ConfirmarMantenimiento { get; set; }
        public virtual DbSet<CotizarMantenimiento> CotizarMantenimiento { get; set; }
        public virtual DbSet<DetalleActivacionConductor> DetalleActivacionConductor { get; set; }
        public virtual DbSet<DetalleActivacionFlota> DetalleActivacionFlota { get; set; }
        public virtual DbSet<DetalleCotizarMantemiento> DetalleCotizarMantemiento { get; set; }
        public virtual DbSet<DetalleFacturaOP> DetalleFacturaOP { get; set; }
        public virtual DbSet<DetalleFacturaReparacion> DetalleFacturaReparacion { get; set; }
        public virtual DbSet<DetalleMantenimientoFlota> DetalleMantenimientoFlota { get; set; }
        public virtual DbSet<DetalleMantenimientoOperacion> DetalleMantenimientoOperacion { get; set; }
        public virtual DbSet<DetallesRutas> DetallesRutas { get; set; }
        public virtual DbSet<DocumentosDelVehiculo> DocumentosDelVehiculo { get; set; }
        public virtual DbSet<EstacionesCombustibles> EstacionesCombustibles { get; set; }
        public virtual DbSet<FacturaCombustible> FacturaCombustible { get; set; }
        public virtual DbSet<FacturaReparacion> FacturaReparacion { get; set; }
        public virtual DbSet<FlotaMarca> FlotaMarca { get; set; }
        public virtual DbSet<FlotaModelo> FlotaModelo { get; set; }
        public virtual DbSet<FlotaSucursal> FlotaSucursal { get; set; }
        public virtual DbSet<FlotaVehicular> FlotaVehicular { get; set; }
        public virtual DbSet<ImagenFlota> ImagenFlota { get; set; }
        public virtual DbSet<MantenimientoFLota> MantenimientoFLota { get; set; }
        public virtual DbSet<MantenimientoOperacion> MantenimientoOperacion { get; set; }
        public virtual DbSet<Mecanicos> Mecanicos { get; set; }
        public virtual DbSet<Rutas> Rutas { get; set; }
        public virtual DbSet<TipoCombustible> TipoCombustible { get; set; }
        public virtual DbSet<TipoVehiculo> TipoVehiculo { get; set; }
        public virtual DbSet<Zonas> Zonas { get; set; }
        public virtual DbSet<AcompañamientoProveedor> AcompañamientoProveedor { get; set; }
        public virtual DbSet<AnticipoCliente> AnticipoCliente { get; set; }
        public virtual DbSet<AnulacionCompra> AnulacionCompra { get; set; }
        public virtual DbSet<AnulacionFactura> AnulacionFactura { get; set; }
        public virtual DbSet<AnulacionPrefactura> AnulacionPrefactura { get; set; }
        public virtual DbSet<AnulacionReciboGeneral> AnulacionReciboGeneral { get; set; }
        public virtual DbSet<AnulacionTraslado> AnulacionTraslado { get; set; }
        public virtual DbSet<AperturaCaja> AperturaCaja { get; set; }
        public virtual DbSet<AperturaDia> AperturaDia { get; set; }
        public virtual DbSet<AplicacionBusqueda> AplicacionBusqueda { get; set; }
        public virtual DbSet<AprobarSolicitudPaseCredito> AprobarSolicitudPaseCredito { get; set; }
        public virtual DbSet<ArqueoCaja> ArqueoCaja { get; set; }
        public virtual DbSet<AsignacionCaja> AsignacionCaja { get; set; }
        public virtual DbSet<AsignarTecnicosOrdenProduccion> AsignarTecnicosOrdenProduccion { get; set; }
        public virtual DbSet<Bancos> Bancos { get; set; }
        public virtual DbSet<Bodega> Bodega { get; set; }
        public virtual DbSet<Caja> Caja { get; set; }
        public virtual DbSet<CajaPrefactura> CajaPrefactura { get; set; }
        public virtual DbSet<CarteraCliente> CarteraCliente { get; set; }
        public virtual DbSet<CategoriaLinea> CategoriaLinea { get; set; }
        public virtual DbSet<Celular> Celular { get; set; }
        public virtual DbSet<CierreCaja> CierreCaja { get; set; }
        public virtual DbSet<CierreDia> CierreDia { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ClienteBanco> ClienteBanco { get; set; }
        public virtual DbSet<ClienteSeguimiento> ClienteSeguimiento { get; set; }
        public virtual DbSet<CodigoAplicacion> CodigoAplicacion { get; set; }
        public virtual DbSet<CodigoOriginal> CodigoOriginal { get; set; }
        public virtual DbSet<ComboProducto> ComboProducto { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<ConceptoSalidaInventario> ConceptoSalidaInventario { get; set; }
        public virtual DbSet<ConfiguracionPV> ConfiguracionPV { get; set; }
        public virtual DbSet<ConfirmarPago> ConfirmarPago { get; set; }
        public virtual DbSet<Consignacion> Consignacion { get; set; }
        public virtual DbSet<Contacto> Contacto { get; set; }
        public virtual DbSet<CosteoPEPS> CosteoPEPS { get; set; }
        public virtual DbSet<CosteoPromedio> CosteoPromedio { get; set; }
        public virtual DbSet<CosteoPromedioPonderado> CosteoPromedioPonderado { get; set; }
        public virtual DbSet<CotizacionVenta> CotizacionVenta { get; set; }
        public virtual DbSet<CuentaBancaria> CuentaBancaria { get; set; }
        public virtual DbSet<DatosBancariosCliente> DatosBancariosCliente { get; set; }
        public virtual DbSet<DatosBancariosProveedor> DatosBancariosProveedor { get; set; }
        public virtual DbSet<DescuentoxProntoPago> DescuentoxProntoPago { get; set; }
        public virtual DbSet<DespachoFactura> DespachoFactura { get; set; }
        public virtual DbSet<DespachoTraslado> DespachoTraslado { get; set; }
        public virtual DbSet<DetalleAnticipoCliente> DetalleAnticipoCliente { get; set; }
        public virtual DbSet<DetalleAsignarTecnicosOrdenProduccion> DetalleAsignarTecnicosOrdenProduccion { get; set; }
        public virtual DbSet<DetalleCheque> DetalleCheque { get; set; }
        public virtual DbSet<DetalleComboProducto> DetalleComboProducto { get; set; }
        public virtual DbSet<DetalleCombosProducto> DetalleCombosProducto { get; set; }
        public virtual DbSet<DetalleCompra> DetalleCompra { get; set; }
        public virtual DbSet<DetalleCompraEliminados> DetalleCompraEliminados { get; set; }
        public virtual DbSet<DetalleCotizacionV> DetalleCotizacionV { get; set; }
        public virtual DbSet<DetalleDescuentoXProntoPAgo> DetalleDescuentoXProntoPAgo { get; set; }
        public virtual DbSet<DetalleDevolucionCompra> DetalleDevolucionCompra { get; set; }
        public virtual DbSet<DetalleDevolucionFactura> DetalleDevolucionFactura { get; set; }
        public virtual DbSet<DetalleEfectivo> DetalleEfectivo { get; set; }
        public virtual DbSet<DetalleExcento> DetalleExcento { get; set; }
        public virtual DbSet<DetalleFactura> DetalleFactura { get; set; }
        public virtual DbSet<DetalleNotaDebitoRetencion> DetalleNotaDebitoRetencion { get; set; }
        public virtual DbSet<DetallePago> DetallePago { get; set; }
        public virtual DbSet<DetallePagoProveedor> DetallePagoProveedor { get; set; }
        public virtual DbSet<DetallePrefacturaV> DetallePrefacturaV { get; set; }
        public virtual DbSet<DetalleProductoDevolucionCompra> DetalleProductoDevolucionCompra { get; set; }
        public virtual DbSet<DetalleProductoMaloOP> DetalleProductoMaloOP { get; set; }
        public virtual DbSet<DetalleProductosPrefacturaPV> DetalleProductosPrefacturaPV { get; set; }
        public virtual DbSet<DetalleProductosSalidaInventario> DetalleProductosSalidaInventario { get; set; }
        public virtual DbSet<DetalleReciboCajaGeneral> DetalleReciboCajaGeneral { get; set; }
        public virtual DbSet<DetalleReciboCajaGeneralNota> DetalleReciboCajaGeneralNota { get; set; }
        public virtual DbSet<DetalleReciboRetencion> DetalleReciboRetencion { get; set; }
        public virtual DbSet<DetalleRetencionesProveedor> DetalleRetencionesProveedor { get; set; }
        public virtual DbSet<DetalleReversionDocumento> DetalleReversionDocumento { get; set; }
        public virtual DbSet<DetalleRevisarCotizacion> DetalleRevisarCotizacion { get; set; }
        public virtual DbSet<DetalleSalidaInventario> DetalleSalidaInventario { get; set; }
        public virtual DbSet<DetalleServiciosImportacion> DetalleServiciosImportacion { get; set; }
        public virtual DbSet<DetallesImpuestos> DetallesImpuestos { get; set; }
        public virtual DbSet<DetalleTarjeta> DetalleTarjeta { get; set; }
        public virtual DbSet<DetalleTransferencia> DetalleTransferencia { get; set; }
        public virtual DbSet<DetalleTraslado> DetalleTraslado { get; set; }
        public virtual DbSet<DetalleTrasladoAprobado> DetalleTrasladoAprobado { get; set; }
        public virtual DbSet<DetalleTrasladoSolicitado> DetalleTrasladoSolicitado { get; set; }
        public virtual DbSet<DetalleVerificacionSolicitudes> DetalleVerificacionSolicitudes { get; set; }
        public virtual DbSet<DevolucionCompra> DevolucionCompra { get; set; }
        public virtual DbSet<DevolucionFactura> DevolucionFactura { get; set; }
        public virtual DbSet<DocumentoSerie> DocumentoSerie { get; set; }
        public virtual DbSet<EstacionesProduccion> EstacionesProduccion { get; set; }
        public virtual DbSet<EstimacionProduccion> EstimacionProduccion { get; set; }
        public virtual DbSet<EstimacionProduccionDetalles> EstimacionProduccionDetalles { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<FacturaRetencion> FacturaRetencion { get; set; }
        public virtual DbSet<Familia> Familia { get; set; }
        public virtual DbSet<IdentificadorEnCombos> IdentificadorEnCombos { get; set; }
        public virtual DbSet<IdentificadoresReversion> IdentificadoresReversion { get; set; }
        public virtual DbSet<IdentificadorProducto> IdentificadorProducto { get; set; }
        public virtual DbSet<IdentificadorVehiculo> IdentificadorVehiculo { get; set; }
        public virtual DbSet<Imagen> Imagen { get; set; }
        public virtual DbSet<IngresoOrdenProduccion> IngresoOrdenProduccion { get; set; }
        public virtual DbSet<IntervaloCredito> IntervaloCredito { get; set; }
        public virtual DbSet<Kardex> Kardex { get; set; }
        public virtual DbSet<KardexIdentificadorProducto> KardexIdentificadorProducto { get; set; }
        public virtual DbSet<KardexLote> KardexLote { get; set; }
        public virtual DbSet<KardexOrdenProduccion> KardexOrdenProduccion { get; set; }
        public virtual DbSet<Linea> Linea { get; set; }
        public virtual DbSet<Lote> Lote { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<MarcaAplicacion> MarcaAplicacion { get; set; }
        public virtual DbSet<Margen> Margen { get; set; }
        public virtual DbSet<ModeloAplicacion> ModeloAplicacion { get; set; }
        public virtual DbSet<MotorAplicacion> MotorAplicacion { get; set; }
        public virtual DbSet<OrdenProduccion> OrdenProduccion { get; set; }
        public virtual DbSet<PermisoEmpleadoBodega> PermisoEmpleadoBodega { get; set; }
        public virtual DbSet<PrecioCombo> PrecioCombo { get; set; }
        public virtual DbSet<PrecioProducto> PrecioProducto { get; set; }
        public virtual DbSet<PrefacturaExcenta> PrefacturaExcenta { get; set; }
        public virtual DbSet<PrefacturaVenta> PrefacturaVenta { get; set; }
        public virtual DbSet<ProcesamientoCreditoCliente> ProcesamientoCreditoCliente { get; set; }
        public virtual DbSet<ProcesarOrdenProduccion> ProcesarOrdenProduccion { get; set; }
        public virtual DbSet<ProcesarSolicitudCostosProduccion> ProcesarSolicitudCostosProduccion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<ProductoImportacion> ProductoImportacion { get; set; }
        public virtual DbSet<ProductoMaloOP> ProductoMaloOP { get; set; }
        public virtual DbSet<ProductosDefectuosos> ProductosDefectuosos { get; set; }
        public virtual DbSet<ProgramarPago> ProgramarPago { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<ProveedorBancario> ProveedorBancario { get; set; }
        public virtual DbSet<ProveedorContacto> ProveedorContacto { get; set; }
        public virtual DbSet<ReciboCajaGeneral> ReciboCajaGeneral { get; set; }
        public virtual DbSet<RequisitoCredito> RequisitoCredito { get; set; }
        public virtual DbSet<RequisitoIntervalo> RequisitoIntervalo { get; set; }
        public virtual DbSet<RequisitosProcesamiento> RequisitosProcesamiento { get; set; }
        public virtual DbSet<Reserva> Reserva { get; set; }
        public virtual DbSet<Retenciones> Retenciones { get; set; }
        public virtual DbSet<RetencionesDetalle> RetencionesDetalle { get; set; }
        public virtual DbSet<RetencionesProveedor> RetencionesProveedor { get; set; }
        public virtual DbSet<ReversionDocumento> ReversionDocumento { get; set; }
        public virtual DbSet<RevisarCotizacion> RevisarCotizacion { get; set; }
        public virtual DbSet<Rubro> Rubro { get; set; }
        public virtual DbSet<SalidaInventario> SalidaInventario { get; set; }
        public virtual DbSet<SectorBodega> SectorBodega { get; set; }
        public virtual DbSet<Segmento> Segmento { get; set; }
        public virtual DbSet<SeguimientoContacto> SeguimientoContacto { get; set; }
        public virtual DbSet<Serie> Serie { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<ServiciosImportacion> ServiciosImportacion { get; set; }
        public virtual DbSet<SolicitarProductosOP> SolicitarProductosOP { get; set; }
        public virtual DbSet<SolicitarProductosOPDetalle> SolicitarProductosOPDetalle { get; set; }
        public virtual DbSet<SolicitudCostosProduccion> SolicitudCostosProduccion { get; set; }
        public virtual DbSet<SolicitudCostosProduccionDetalle> SolicitudCostosProduccionDetalle { get; set; }
        public virtual DbSet<SolicitudCredito> SolicitudCredito { get; set; }
        public virtual DbSet<SolicitudPaseCredito> SolicitudPaseCredito { get; set; }
        public virtual DbSet<SolicitudTraslado> SolicitudTraslado { get; set; }
        public virtual DbSet<Tecnico> Tecnico { get; set; }
        public virtual DbSet<TipoEspacio> TipoEspacio { get; set; }
        public virtual DbSet<TitulosReportes> TitulosReportes { get; set; }
        public virtual DbSet<TotalLiquidacionCompra> TotalLiquidacionCompra { get; set; }
        public virtual DbSet<TrabajoOrdenProduccion> TrabajoOrdenProduccion { get; set; }
        public virtual DbSet<Traslado> Traslado { get; set; }
        public virtual DbSet<TrasladoOrdenProduccion> TrasladoOrdenProduccion { get; set; }
        public virtual DbSet<TrasladoOrdenTrabajo> TrasladoOrdenTrabajo { get; set; }
        public virtual DbSet<UbicacionCliente> UbicacionCliente { get; set; }
        public virtual DbSet<UbicacionFabrica> UbicacionFabrica { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
        public virtual DbSet<UnidadPeso> UnidadPeso { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<Vendedor> Vendedor { get; set; }
        public virtual DbSet<VerificacionTransferencia> VerificacionTransferencia { get; set; }
        public virtual DbSet<VersionAplicacion> VersionAplicacion { get; set; }
        public virtual DbSet<Accidente> Accidente { get; set; }
        public virtual DbSet<Adelanto> Adelanto { get; set; }
        public virtual DbSet<AlcancePuesto> AlcancePuesto { get; set; }
        public virtual DbSet<Alimento> Alimento { get; set; }
        public virtual DbSet<Aplicacion> Aplicacion { get; set; }
        public virtual DbSet<AplicacionEmpleado> AplicacionEmpleado { get; set; }
        public virtual DbSet<Asistencia> Asistencia { get; set; }
        public virtual DbSet<BajaPersonal> BajaPersonal { get; set; }
        public virtual DbSet<CalendarioAlimento> CalendarioAlimento { get; set; }
        public virtual DbSet<CalendarioPago> CalendarioPago { get; set; }
        public virtual DbSet<Concepto> Concepto { get; set; }
        public virtual DbSet<ConfiguracionRRHH> ConfiguracionRRHH { get; set; }
        public virtual DbSet<ContactoEmpresa> ContactoEmpresa { get; set; }
        public virtual DbSet<ContratoLaboral> ContratoLaboral { get; set; }
        public virtual DbSet<CorreoCarteraYCobro> CorreoCarteraYCobro { get; set; }
        public virtual DbSet<CuentaEmpleado> CuentaEmpleado { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<DesvinculacionPersonal> DesvinculacionPersonal { get; set; }
        public virtual DbSet<DetalleCorreoCarteraYCobro> DetalleCorreoCarteraYCobro { get; set; }
        public virtual DbSet<DetalleEquipos> DetalleEquipos { get; set; }
        public virtual DbSet<DetallePedido> DetallePedido { get; set; }
        public virtual DbSet<Documento> Documento { get; set; }
        public virtual DbSet<DocumentoAccidente> DocumentoAccidente { get; set; }
        public virtual DbSet<DocumentoDesvinculacion> DocumentoDesvinculacion { get; set; }
        public virtual DbSet<DocumentoIncidente> DocumentoIncidente { get; set; }
        public virtual DbSet<DocumentoPuesto> DocumentoPuesto { get; set; }
        public virtual DbSet<DocumentoSoporte> DocumentoSoporte { get; set; }
        public virtual DbSet<Emergencia> Emergencia { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EmpleadoPuesto> EmpleadoPuesto { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<EnfermedadPuesto> EnfermedadPuesto { get; set; }
        public virtual DbSet<EntregaEquipo> EntregaEquipo { get; set; }
        public virtual DbSet<EvaluacionBaja> EvaluacionBaja { get; set; }
        public virtual DbSet<HerramientaPuesto> HerramientaPuesto { get; set; }
        public virtual DbSet<Horario> Horario { get; set; }
        public virtual DbSet<Incidente> Incidente { get; set; }
        public virtual DbSet<IndicadorDesempeñoPuesto> IndicadorDesempeñoPuesto { get; set; }
        public virtual DbSet<InfoPuesto> InfoPuesto { get; set; }
        public virtual DbSet<Liquidacion> Liquidacion { get; set; }
        public virtual DbSet<NivelAcademico> NivelAcademico { get; set; }
        public virtual DbSet<Nomina> Nomina { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PermisoEmpleado> PermisoEmpleado { get; set; }
        public virtual DbSet<Puesto> Puesto { get; set; }
        public virtual DbSet<RequisitoPuesto> RequisitoPuesto { get; set; }
        public virtual DbSet<RiesgoPuesto> RiesgoPuesto { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<SucursalDepartamento> SucursalDepartamento { get; set; }
        public virtual DbSet<TareaPuesto> TareaPuesto { get; set; }
        public virtual DbSet<TestigoAccidente> TestigoAccidente { get; set; }
        public virtual DbSet<UbicacionEmpleado> UbicacionEmpleado { get; set; }
        public virtual DbSet<AccesorioOrdenTrabajo> AccesorioOrdenTrabajo { get; set; }
        public virtual DbSet<AprobarPrefacturaInternaOT> AprobarPrefacturaInternaOT { get; set; }
        public virtual DbSet<AsignacionTecnicoServicio> AsignacionTecnicoServicio { get; set; }
        public virtual DbSet<AsignarProductos> AsignarProductos { get; set; }
        public virtual DbSet<BodegaSerieOT> BodegaSerieOT { get; set; }
        public virtual DbSet<ConceptoCotizacion> ConceptoCotizacion { get; set; }
        public virtual DbSet<ConductorCliente> ConductorCliente { get; set; }
        public virtual DbSet<ConfirmarCita> ConfirmarCita { get; set; }
        public virtual DbSet<ConsecutivoCotizacionCompra> ConsecutivoCotizacionCompra { get; set; }
        public virtual DbSet<CotizacionCompra> CotizacionCompra { get; set; }
        public virtual DbSet<CotizacionOT> CotizacionOT { get; set; }
        public virtual DbSet<DetalleAsignacionTecnicoServicio> DetalleAsignacionTecnicoServicio { get; set; }
        public virtual DbSet<DetalleAsignarProductos> DetalleAsignarProductos { get; set; }
        public virtual DbSet<DetalleCotizacionCompra> DetalleCotizacionCompra { get; set; }
        public virtual DbSet<DetalleCotizacionInsumo> DetalleCotizacionInsumo { get; set; }
        public virtual DbSet<DetalleMantenimiento> DetalleMantenimiento { get; set; }
        public virtual DbSet<DetallePeticionCompra> DetallePeticionCompra { get; set; }
        public virtual DbSet<DetallePreFacturaInternaOT> DetallePreFacturaInternaOT { get; set; }
        public virtual DbSet<DetallePreFacturaOT> DetallePreFacturaOT { get; set; }
        public virtual DbSet<DetalleProductosCotizacionOT> DetalleProductosCotizacionOT { get; set; }
        public virtual DbSet<DetalleServicioCotizacionOT> DetalleServicioCotizacionOT { get; set; }
        public virtual DbSet<DetalleTrabajoCliente> DetalleTrabajoCliente { get; set; }
        public virtual DbSet<EmpleadosPreFacturaInternaOT> EmpleadosPreFacturaInternaOT { get; set; }
        public virtual DbSet<EstacionTrabajo> EstacionTrabajo { get; set; }
        public virtual DbSet<EstadosOT> EstadosOT { get; set; }
        public virtual DbSet<FlotaCliente> FlotaCliente { get; set; }
        public virtual DbSet<ImagenesCroquis> ImagenesCroquis { get; set; }
        public virtual DbSet<ImagenesVehiculoOT> ImagenesVehiculoOT { get; set; }
        public virtual DbSet<Insumos> Insumos { get; set; }
        public virtual DbSet<KardexOT> KardexOT { get; set; }
        public virtual DbSet<Mantenimiento> Mantenimiento { get; set; }
        public virtual DbSet<MantenimientoOrdenTrabajo> MantenimientoOrdenTrabajo { get; set; }
        public virtual DbSet<MecanicosEstacionTrabajo> MecanicosEstacionTrabajo { get; set; }
        public virtual DbSet<MecanicosVehiculoProceso> MecanicosVehiculoProceso { get; set; }
        public virtual DbSet<MovimientosEntreOrdenesTrabajo> MovimientosEntreOrdenesTrabajo { get; set; }
        public virtual DbSet<MovimientosEntreOrdenesTrabajoDetalle> MovimientosEntreOrdenesTrabajoDetalle { get; set; }
        public virtual DbSet<OrdenTrabajo> OrdenTrabajo { get; set; }
        public virtual DbSet<PeticionCompra> PeticionCompra { get; set; }
        public virtual DbSet<PreFacturaInternaOT> PreFacturaInternaOT { get; set; }
        public virtual DbSet<PreFacturaOT> PreFacturaOT { get; set; }
        public virtual DbSet<PruebaVehiculo> PruebaVehiculo { get; set; }
        public virtual DbSet<SolicitudAperturaOT> SolicitudAperturaOT { get; set; }
        public virtual DbSet<TrabajoCliente> TrabajoCliente { get; set; }
        public virtual DbSet<TrabajosExternos> TrabajosExternos { get; set; }
        public virtual DbSet<VehiculoEnProceso> VehiculoEnProceso { get; set; }
        public virtual DbSet<VehiculoProcesoEstaciones> VehiculoProcesoEstaciones { get; set; }
        public virtual DbSet<BitacoraUsuario> BitacoraUsuario { get; set; }
        public virtual DbSet<BitacoraUsuarioModulo> BitacoraUsuarioModulo { get; set; }
        public virtual DbSet<ListaMac> ListaMac { get; set; }
        public virtual DbSet<ListaModulos> ListaModulos { get; set; }
        public virtual DbSet<Notificacion> Notificacion { get; set; }
        public virtual DbSet<NotificacionUsuario> NotificacionUsuario { get; set; }
        public virtual DbSet<Permiso> Permiso { get; set; }
        public virtual DbSet<Sistema> Sistema { get; set; }
        public virtual DbSet<SistemaEmpresa> SistemaEmpresa { get; set; }
        public virtual DbSet<SolicitudPermisoSistema> SolicitudPermisoSistema { get; set; }
        public virtual DbSet<TasaCambio> TasaCambio { get; set; }
        public virtual DbSet<TipoCuenta> TipoCuenta { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UtilSistema> UtilSistema { get; set; }
        public virtual DbSet<SectorEspacio> SectorEspacio { get; set; }
        public virtual DbSet<VistaReservaCotizacion> VistaReservaCotizacion { get; set; }
        public virtual DbSet<VwBitacoraModuloSistema> VwBitacoraModuloSistema { get; set; }
        public virtual DbSet<VwBitacoraUsuario> VwBitacoraUsuario { get; set; }
        public virtual DbSet<VwDarFormatoPermisos> VwDarFormatoPermisos { get; set; }
        public virtual DbSet<VwDatosEmpleado> VwDatosEmpleado { get; set; }
        public virtual DbSet<VwDetallesCompra> VwDetallesCompra { get; set; }
        public virtual DbSet<VwEmpleadoConContrato> VwEmpleadoConContrato { get; set; }
        public virtual DbSet<VwEmpleadoSinContrato> VwEmpleadoSinContrato { get; set; }
        public virtual DbSet<VwIdentificadoresReservados> VwIdentificadoresReservados { get; set; }
        public virtual DbSet<VwMostrarDepartamentos> VwMostrarDepartamentos { get; set; }
        public virtual DbSet<VwMostrarEmpleados> VwMostrarEmpleados { get; set; }
        public virtual DbSet<VwMostrarEmpresa> VwMostrarEmpresa { get; set; }
        public virtual DbSet<VwMostrarEntregaEquipos> VwMostrarEntregaEquipos { get; set; }
        public virtual DbSet<VwMostrarPuesto> VwMostrarPuesto { get; set; }
        public virtual DbSet<VwMostrarPuestos> VwMostrarPuestos { get; set; }
        public virtual DbSet<VwMostrarUsuario> VwMostrarUsuario { get; set; }
        public virtual DbSet<VwMovimientoConfirmado> VwMovimientoConfirmado { get; set; }
        public virtual DbSet<VwMovimientoDenegado> VwMovimientoDenegado { get; set; }
        public virtual DbSet<VwMovimientoEmpleado> VwMovimientoEmpleado { get; set; }
        public virtual DbSet<VwPrductoCosto> VwPrductoCosto { get; set; }
        public virtual DbSet<VwReservaCotizacion> VwReservaCotizacion { get; set; }
        public virtual DbSet<VwReservaPrefactura> VwReservaPrefactura { get; set; }
        public virtual DbSet<VwReservaTraslado> VwReservaTraslado { get; set; }
        public virtual DbSet<VwSeleccionarEmpleado> VwSeleccionarEmpleado { get; set; }
        public virtual DbSet<VwSeries> VwSeries { get; set; }
    
        [DbFunction("ERP_MSCORPEntities", "ArrayIntToTable")]
        public virtual IQueryable<ArrayIntToTable_Result> ArrayIntToTable(string delimStr)
        {
            var delimStrParameter = delimStr != null ?
                new ObjectParameter("delimStr", delimStr) :
                new ObjectParameter("delimStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ArrayIntToTable_Result>("[ERP_MSCORPEntities].[ArrayIntToTable](@delimStr)", delimStrParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "ArrayToTable")]
        public virtual IQueryable<ArrayToTable_Result> ArrayToTable(string delimStr)
        {
            var delimStrParameter = delimStr != null ?
                new ObjectParameter("delimStr", delimStr) :
                new ObjectParameter("delimStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ArrayToTable_Result>("[ERP_MSCORPEntities].[ArrayToTable](@delimStr)", delimStrParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_CalcularLiquidacion")]
        public virtual IQueryable<Ft_CalcularLiquidacion_Result> Ft_CalcularLiquidacion(Nullable<int> idEmpleado, Nullable<System.DateTime> fechaSalida, Nullable<decimal> otrosIngresos, Nullable<decimal> bonificacion, Nullable<decimal> promComision, Nullable<decimal> altaComision, Nullable<decimal> iR)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            var otrosIngresosParameter = otrosIngresos.HasValue ?
                new ObjectParameter("OtrosIngresos", otrosIngresos) :
                new ObjectParameter("OtrosIngresos", typeof(decimal));
    
            var bonificacionParameter = bonificacion.HasValue ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(decimal));
    
            var promComisionParameter = promComision.HasValue ?
                new ObjectParameter("PromComision", promComision) :
                new ObjectParameter("PromComision", typeof(decimal));
    
            var altaComisionParameter = altaComision.HasValue ?
                new ObjectParameter("AltaComision", altaComision) :
                new ObjectParameter("AltaComision", typeof(decimal));
    
            var iRParameter = iR.HasValue ?
                new ObjectParameter("IR", iR) :
                new ObjectParameter("IR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_CalcularLiquidacion_Result>("[ERP_MSCORPEntities].[Ft_CalcularLiquidacion](@idEmpleado, @fechaSalida, @OtrosIngresos, @Bonificacion, @PromComision, @AltaComision, @IR)", idEmpleadoParameter, fechaSalidaParameter, otrosIngresosParameter, bonificacionParameter, promComisionParameter, altaComisionParameter, iRParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_EstadoCuentaGeneralCordobasXIdEmpresa")]
        public virtual IQueryable<Ft_EstadoCuentaGeneralCordobasXIdEmpresa_Result> Ft_EstadoCuentaGeneralCordobasXIdEmpresa(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_EstadoCuentaGeneralCordobasXIdEmpresa_Result>("[ERP_MSCORPEntities].[Ft_EstadoCuentaGeneralCordobasXIdEmpresa](@idempresa)", idempresaParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_GenerarNomina")]
        public virtual IQueryable<Ft_GenerarNomina_Result> Ft_GenerarNomina(string periodo, Nullable<int> idEmpresa)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_GenerarNomina_Result>("[ERP_MSCORPEntities].[Ft_GenerarNomina](@Periodo, @IdEmpresa)", periodoParameter, idEmpresaParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_GenerarNominaDepartamento")]
        public virtual IQueryable<Ft_GenerarNominaDepartamento_Result> Ft_GenerarNominaDepartamento(Nullable<int> idEmpresa, string periodo, string departamento)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_GenerarNominaDepartamento_Result>("[ERP_MSCORPEntities].[Ft_GenerarNominaDepartamento](@IdEmpresa, @Periodo, @Departamento)", idEmpresaParameter, periodoParameter, departamentoParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "ft_MostrarFacturasXProveedor")]
        public virtual IQueryable<ft_MostrarFacturasXProveedor_Result> ft_MostrarFacturasXProveedor(Nullable<int> iDEMPRESA, Nullable<int> iDPROVEEDOR)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var iDPROVEEDORParameter = iDPROVEEDOR.HasValue ?
                new ObjectParameter("IDPROVEEDOR", iDPROVEEDOR) :
                new ObjectParameter("IDPROVEEDOR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ft_MostrarFacturasXProveedor_Result>("[ERP_MSCORPEntities].[ft_MostrarFacturasXProveedor](@IDEMPRESA, @IDPROVEEDOR)", iDEMPRESAParameter, iDPROVEEDORParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "ft_MostrarListaCorreoEnviados")]
        public virtual IQueryable<ft_MostrarListaCorreoEnviados_Result> ft_MostrarListaCorreoEnviados(Nullable<int> idEmpresa, string fincio, string ffin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fincioParameter = fincio != null ?
                new ObjectParameter("Fincio", fincio) :
                new ObjectParameter("Fincio", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("Ffin", ffin) :
                new ObjectParameter("Ffin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ft_MostrarListaCorreoEnviados_Result>("[ERP_MSCORPEntities].[ft_MostrarListaCorreoEnviados](@IdEmpresa, @Fincio, @Ffin)", idEmpresaParameter, fincioParameter, ffinParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_ObtenerFechaPeriodo")]
        public virtual IQueryable<Ft_ObtenerFechaPeriodo_Result> Ft_ObtenerFechaPeriodo(string periodo)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_ObtenerFechaPeriodo_Result>("[ERP_MSCORPEntities].[Ft_ObtenerFechaPeriodo](@Periodo)", periodoParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "ft_ObtenerTodosProveedores")]
        public virtual IQueryable<ft_ObtenerTodosProveedores_Result> ft_ObtenerTodosProveedores(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ft_ObtenerTodosProveedores_Result>("[ERP_MSCORPEntities].[ft_ObtenerTodosProveedores](@IdEmpresa)", idEmpresaParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_TotalFacturasPendientesPVXIdCliente")]
        public virtual IQueryable<Ft_TotalFacturasPendientesPVXIdCliente_Result> Ft_TotalFacturasPendientesPVXIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_TotalFacturasPendientesPVXIdCliente_Result>("[ERP_MSCORPEntities].[Ft_TotalFacturasPendientesPVXIdCliente](@IdCliente)", idClienteParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "Ft_TotalFacturasPendientesSACXIdCliente")]
        public virtual IQueryable<Ft_TotalFacturasPendientesSACXIdCliente_Result> Ft_TotalFacturasPendientesSACXIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Ft_TotalFacturasPendientesSACXIdCliente_Result>("[ERP_MSCORPEntities].[Ft_TotalFacturasPendientesSACXIdCliente](@IdCliente)", idClienteParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "FtFacturasAnuladasXIdCliente")]
        public virtual IQueryable<FtFacturasAnuladasXIdCliente_Result> FtFacturasAnuladasXIdCliente(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FtFacturasAnuladasXIdCliente_Result>("[ERP_MSCORPEntities].[FtFacturasAnuladasXIdCliente](@idcliente)", idclienteParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "ftMostrarAccionesRealizadasXEmpresa")]
        public virtual IQueryable<ftMostrarAccionesRealizadasXEmpresa_Result> ftMostrarAccionesRealizadasXEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ftMostrarAccionesRealizadasXEmpresa_Result>("[ERP_MSCORPEntities].[ftMostrarAccionesRealizadasXEmpresa](@IdEmpresa)", idEmpresaParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "FtObtenerPeriodos")]
        public virtual IQueryable<FtObtenerPeriodos_Result> FtObtenerPeriodos(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FtObtenerPeriodos_Result>("[ERP_MSCORPEntities].[FtObtenerPeriodos](@IdEmpresa)", idEmpresaParameter);
        }
    
        [DbFunction("ERP_MSCORPEntities", "TopContactoEmergencia")]
        public virtual IQueryable<TopContactoEmergencia_Result> TopContactoEmergencia(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TopContactoEmergencia_Result>("[ERP_MSCORPEntities].[TopContactoEmergencia](@idEmpleado)", idEmpleadoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_Auxiliar_DetallePagoFACTURA_OT_Result> Sp_Auxiliar_DetallePagoFACTURA_OT(Nullable<int> idPrefaturaOT, Nullable<int> idEmpresa, Nullable<int> idCaja)
        {
            var idPrefaturaOTParameter = idPrefaturaOT.HasValue ?
                new ObjectParameter("IdPrefaturaOT", idPrefaturaOT) :
                new ObjectParameter("IdPrefaturaOT", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Auxiliar_DetallePagoFACTURA_OT_Result>("Sp_Auxiliar_DetallePagoFACTURA_OT", idPrefaturaOTParameter, idEmpresaParameter, idCajaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_BodegaACargarEnAnulacionDeFacturaOT(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_BodegaACargarEnAnulacionDeFacturaOT", idFacturaParameter);
        }
    
        public virtual int Sp_CalcularLiquidacion(Nullable<int> idEmpleado, Nullable<System.DateTime> fechaSalida, Nullable<decimal> otrosIngresos, Nullable<decimal> bonificacion, Nullable<decimal> promComision, Nullable<decimal> altaComision, Nullable<decimal> iR)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            var otrosIngresosParameter = otrosIngresos.HasValue ?
                new ObjectParameter("OtrosIngresos", otrosIngresos) :
                new ObjectParameter("OtrosIngresos", typeof(decimal));
    
            var bonificacionParameter = bonificacion.HasValue ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(decimal));
    
            var promComisionParameter = promComision.HasValue ?
                new ObjectParameter("PromComision", promComision) :
                new ObjectParameter("PromComision", typeof(decimal));
    
            var altaComisionParameter = altaComision.HasValue ?
                new ObjectParameter("AltaComision", altaComision) :
                new ObjectParameter("AltaComision", typeof(decimal));
    
            var iRParameter = iR.HasValue ?
                new ObjectParameter("IR", iR) :
                new ObjectParameter("IR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CalcularLiquidacion", idEmpleadoParameter, fechaSalidaParameter, otrosIngresosParameter, bonificacionParameter, promComisionParameter, altaComisionParameter, iRParameter);
        }
    
        public virtual ObjectResult<sp_CancelarFacturaND_Proveedor_Result> sp_CancelarFacturaND_Proveedor(Nullable<int> idNC, Nullable<int> idEmpresa, string aplicaA)
        {
            var idNCParameter = idNC.HasValue ?
                new ObjectParameter("IdNC", idNC) :
                new ObjectParameter("IdNC", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var aplicaAParameter = aplicaA != null ?
                new ObjectParameter("AplicaA", aplicaA) :
                new ObjectParameter("AplicaA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CancelarFacturaND_Proveedor_Result>("sp_CancelarFacturaND_Proveedor", idNCParameter, idEmpresaParameter, aplicaAParameter);
        }
    
        public virtual ObjectResult<sp_CancelarFacturaND_ProveedorXPago_Result> sp_CancelarFacturaND_ProveedorXPago(Nullable<int> idPG, Nullable<int> idEmpresa)
        {
            var idPGParameter = idPG.HasValue ?
                new ObjectParameter("IdPG", idPG) :
                new ObjectParameter("IdPG", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CancelarFacturaND_ProveedorXPago_Result>("sp_CancelarFacturaND_ProveedorXPago", idPGParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_CargarDatosEmpresaParaFACTURA_Result> Sp_CargarDatosEmpresaParaFACTURA(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarDatosEmpresaParaFACTURA_Result>("Sp_CargarDatosEmpresaParaFACTURA", idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_CargarDetalleNotaCredito_ReporteXId_Result> sp_CargarDetalleNotaCredito_ReporteXId(Nullable<int> idNotaCredito, string aplicaA, Nullable<int> idEmpresa, string moneda)
        {
            var idNotaCreditoParameter = idNotaCredito.HasValue ?
                new ObjectParameter("idNotaCredito", idNotaCredito) :
                new ObjectParameter("idNotaCredito", typeof(int));
    
            var aplicaAParameter = aplicaA != null ?
                new ObjectParameter("AplicaA", aplicaA) :
                new ObjectParameter("AplicaA", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CargarDetalleNotaCredito_ReporteXId_Result>("sp_CargarDetalleNotaCredito_ReporteXId", idNotaCreditoParameter, aplicaAParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<Sp_CargarDNCP_XIdNC_Result> Sp_CargarDNCP_XIdNC(Nullable<int> iDEMPRESA, Nullable<int> iDNC)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var iDNCParameter = iDNC.HasValue ?
                new ObjectParameter("IDNC", iDNC) :
                new ObjectParameter("IDNC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarDNCP_XIdNC_Result>("Sp_CargarDNCP_XIdNC", iDEMPRESAParameter, iDNCParameter);
        }
    
        public virtual ObjectResult<Sp_CargarFacturasEnCobranza_Result> Sp_CargarFacturasEnCobranza(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarFacturasEnCobranza_Result>("Sp_CargarFacturasEnCobranza", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_CargarFacturasPrefacturaPVParaAnulacion_Result> Sp_CargarFacturasPrefacturaPVParaAnulacion(Nullable<int> idSucursal, Nullable<System.DateTime> fecha)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarFacturasPrefacturaPVParaAnulacion_Result>("Sp_CargarFacturasPrefacturaPVParaAnulacion", idSucursalParameter, fechaParameter);
        }
    
        public virtual ObjectResult<Sp_CargarFacturasPrefacturaPVParaCanceldas_Result> Sp_CargarFacturasPrefacturaPVParaCanceldas(Nullable<int> idSucursal, Nullable<System.DateTime> fecha)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarFacturasPrefacturaPVParaCanceldas_Result>("Sp_CargarFacturasPrefacturaPVParaCanceldas", idSucursalParameter, fechaParameter);
        }
    
        public virtual ObjectResult<Sp_CargarListasCriterioProveedor_Result> Sp_CargarListasCriterioProveedor(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarListasCriterioProveedor_Result>("Sp_CargarListasCriterioProveedor", idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_CargarSolicitudEmisionCheque_Result> sp_CargarSolicitudEmisionCheque(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CargarSolicitudEmisionCheque_Result>("sp_CargarSolicitudEmisionCheque", idSolicitudParameter);
        }
    
        public virtual ObjectResult<Sp_CargarTodasFacturasPrefacturaPVParaAnulacion_Result> Sp_CargarTodasFacturasPrefacturaPVParaAnulacion(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarTodasFacturasPrefacturaPVParaAnulacion_Result>("Sp_CargarTodasFacturasPrefacturaPVParaAnulacion", idSucursalParameter);
        }
    
        public virtual ObjectResult<Sp_CargarTodasFacturasPrefacturaPVParaCancelas_Result> Sp_CargarTodasFacturasPrefacturaPVParaCancelas(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CargarTodasFacturasPrefacturaPVParaCancelas_Result>("Sp_CargarTodasFacturasPrefacturaPVParaCancelas", idSucursalParameter);
        }
    
        public virtual ObjectResult<Sp_ComprobarExistenciaDevolucionesXFactura_Result> Sp_ComprobarExistenciaDevolucionesXFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ComprobarExistenciaDevolucionesXFactura_Result>("Sp_ComprobarExistenciaDevolucionesXFactura", idFacturaParameter);
        }
    
        public virtual ObjectResult<sp_CotizacionTaller_Result> sp_CotizacionTaller(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CotizacionTaller_Result>("sp_CotizacionTaller", idEmpresaParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_DatosDelClienteEnFacturaRealizada_Result> Sp_DatosDelClienteEnFacturaRealizada(Nullable<int> idPrefacturaOT)
        {
            var idPrefacturaOTParameter = idPrefacturaOT.HasValue ?
                new ObjectParameter("IdPrefacturaOT", idPrefacturaOT) :
                new ObjectParameter("IdPrefacturaOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DatosDelClienteEnFacturaRealizada_Result>("Sp_DatosDelClienteEnFacturaRealizada", idPrefacturaOTParameter);
        }
    
        public virtual ObjectResult<sp_DatosDocumentoServicio_Result> sp_DatosDocumentoServicio(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DatosDocumentoServicio_Result>("sp_DatosDocumentoServicio", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<sp_DatosNotaDebitoProveedorXId_Result> sp_DatosNotaDebitoProveedorXId(Nullable<int> idNotaDebito)
        {
            var idNotaDebitoParameter = idNotaDebito.HasValue ?
                new ObjectParameter("IdNotaDebito", idNotaDebito) :
                new ObjectParameter("IdNotaDebito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DatosNotaDebitoProveedorXId_Result>("sp_DatosNotaDebitoProveedorXId", idNotaDebitoParameter);
        }
    
        public virtual ObjectResult<sp_DatosNotaDebitoXId_Result> sp_DatosNotaDebitoXId(Nullable<int> idNotaDebito)
        {
            var idNotaDebitoParameter = idNotaDebito.HasValue ?
                new ObjectParameter("IdNotaDebito", idNotaDebito) :
                new ObjectParameter("IdNotaDebito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DatosNotaDebitoXId_Result>("sp_DatosNotaDebitoXId", idNotaDebitoParameter);
        }
    
        public virtual ObjectResult<sp_DatosPrefacturaInterna_Result> sp_DatosPrefacturaInterna(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DatosPrefacturaInterna_Result>("sp_DatosPrefacturaInterna", idPrefacturaParameter);
        }
    
        public virtual int Sp_DecrementarProductoCalendarioAlimento(Nullable<int> idCalendarioAlimento, Nullable<int> solicitado)
        {
            var idCalendarioAlimentoParameter = idCalendarioAlimento.HasValue ?
                new ObjectParameter("IdCalendarioAlimento", idCalendarioAlimento) :
                new ObjectParameter("IdCalendarioAlimento", typeof(int));
    
            var solicitadoParameter = solicitado.HasValue ?
                new ObjectParameter("solicitado", solicitado) :
                new ObjectParameter("solicitado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DecrementarProductoCalendarioAlimento", idCalendarioAlimentoParameter, solicitadoParameter);
        }
    
        public virtual int Sp_DenegarSolicitudesProductos(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DenegarSolicitudesProductos", fechaParameter);
        }
    
        public virtual ObjectResult<Sp_DetalleParaFacturaOT_Result> Sp_DetalleParaFacturaOT(Nullable<int> idPrefacturaOT, Nullable<int> idEmpresa)
        {
            var idPrefacturaOTParameter = idPrefacturaOT.HasValue ?
                new ObjectParameter("IdPrefacturaOT", idPrefacturaOT) :
                new ObjectParameter("IdPrefacturaOT", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DetalleParaFacturaOT_Result>("Sp_DetalleParaFacturaOT", idPrefacturaOTParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_DetallePreFacturaInternaOT_Result> sp_DetallePreFacturaInternaOT(Nullable<int> idPreFactura)
        {
            var idPreFacturaParameter = idPreFactura.HasValue ?
                new ObjectParameter("IdPreFactura", idPreFactura) :
                new ObjectParameter("IdPreFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetallePreFacturaInternaOT_Result>("sp_DetallePreFacturaInternaOT", idPreFacturaParameter);
        }
    
        public virtual ObjectResult<Sp_DetallesCotizacionTaller_Result> Sp_DetallesCotizacionTaller(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DetallesCotizacionTaller_Result>("Sp_DetallesCotizacionTaller", idCotizacionParameter);
        }
    
        public virtual ObjectResult<sp_DetallesNotaDebitoXId_Result> sp_DetallesNotaDebitoXId(Nullable<int> idNotaDebito)
        {
            var idNotaDebitoParameter = idNotaDebito.HasValue ?
                new ObjectParameter("IdNotaDebito", idNotaDebito) :
                new ObjectParameter("IdNotaDebito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetallesNotaDebitoXId_Result>("sp_DetallesNotaDebitoXId", idNotaDebitoParameter);
        }
    
        public virtual ObjectResult<sp_DetallesNotaDebitoXIdProveedor_Result> sp_DetallesNotaDebitoXIdProveedor(Nullable<int> idNotaDebito)
        {
            var idNotaDebitoParameter = idNotaDebito.HasValue ?
                new ObjectParameter("IdNotaDebito", idNotaDebito) :
                new ObjectParameter("IdNotaDebito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetallesNotaDebitoXIdProveedor_Result>("sp_DetallesNotaDebitoXIdProveedor", idNotaDebitoParameter);
        }
    
        public virtual ObjectResult<Sp_DetallesOrdenTrabajo_Result> Sp_DetallesOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("IdOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("IdOrdenTrabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DetallesOrdenTrabajo_Result>("Sp_DetallesOrdenTrabajo", idOrdenTrabajoParameter);
        }
    
        public virtual ObjectResult<sp_DetallesPrefacturaTaller_Result> sp_DetallesPrefacturaTaller(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DetallesPrefacturaTaller_Result>("sp_DetallesPrefacturaTaller", idPrefacturaParameter);
        }
    
        public virtual int Sp_DiasDevengados(Nullable<int> idEmpleado, Nullable<System.DateTime> fechaSalida, ObjectParameter diasDevengados)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var fechaSalidaParameter = fechaSalida.HasValue ?
                new ObjectParameter("fechaSalida", fechaSalida) :
                new ObjectParameter("fechaSalida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DiasDevengados", idEmpleadoParameter, fechaSalidaParameter, diasDevengados);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_DiasVacaciones(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_DiasVacaciones", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_DiasVacacionesTomados(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_DiasVacacionesTomados", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<sp_DocumentoServicioTaller_Result> sp_DocumentoServicioTaller(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DocumentoServicioTaller_Result>("sp_DocumentoServicioTaller", idDocumentoParameter, documentoParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Sp_EstadoCuentaGeneralCordobasXIdEmpresa_Result> Sp_EstadoCuentaGeneralCordobasXIdEmpresa(Nullable<int> idempresa, string moneda)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_EstadoCuentaGeneralCordobasXIdEmpresa_Result>("Sp_EstadoCuentaGeneralCordobasXIdEmpresa", idempresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<Sp_FacturaCanceladasXCliente_ProntoPago_Result> Sp_FacturaCanceladasXCliente_ProntoPago(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_FacturaCanceladasXCliente_ProntoPago_Result>("Sp_FacturaCanceladasXCliente_ProntoPago", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_FrecuenciaPagoXCliente_Result> sp_FrecuenciaPagoXCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FrecuenciaPagoXCliente_Result>("sp_FrecuenciaPagoXCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_GetCostoDetalleDocumento_Result> sp_GetCostoDetalleDocumento(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCostoDetalleDocumento_Result>("sp_GetCostoDetalleDocumento", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<sp_getPrefacturasExoneradas_Result> sp_getPrefacturasExoneradas(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPrefacturasExoneradas_Result>("sp_getPrefacturasExoneradas", idSucursalParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> sp_ListaCodigosAlternosProductosConCosto(Nullable<int> idEmpresa, Nullable<int> idSegmento)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("idSegmento", idSegmento) :
                new ObjectParameter("idSegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ListaCodigosAlternosProductosConCosto", idEmpresaParameter, idSegmentoParameter);
        }
    
        public virtual ObjectResult<Sp_ListaCotizacionProductos_Result> Sp_ListaCotizacionProductos(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListaCotizacionProductos_Result>("Sp_ListaCotizacionProductos", idCotizacionParameter);
        }
    
        public virtual ObjectResult<Sp_ListaCotizacionServicios_Result> Sp_ListaCotizacionServicios(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListaCotizacionServicios_Result>("Sp_ListaCotizacionServicios", idCotizacionParameter);
        }
    
        public virtual ObjectResult<Sp_ListaDetallesCotizacionTaller_Result> Sp_ListaDetallesCotizacionTaller(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListaDetallesCotizacionTaller_Result>("Sp_ListaDetallesCotizacionTaller", idCotizacionParameter);
        }
    
        public virtual ObjectResult<SP_ListaNCPaprobada_Result> SP_ListaNCPaprobada(Nullable<int> iDEMPRESA)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaNCPaprobada_Result>("SP_ListaNCPaprobada", iDEMPRESAParameter);
        }
    
        public virtual ObjectResult<SP_ListaNCPdenegada_Result> SP_ListaNCPdenegada(Nullable<int> iDEMPRESA)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaNCPdenegada_Result>("SP_ListaNCPdenegada", iDEMPRESAParameter);
        }
    
        public virtual ObjectResult<SP_ListaNCPingresada_Result> SP_ListaNCPingresada(Nullable<int> iDEMPRESA)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaNCPingresada_Result>("SP_ListaNCPingresada", iDEMPRESAParameter);
        }
    
        public virtual ObjectResult<sp_ListaNotasDebitoProveedorBeneficiario_Result> sp_ListaNotasDebitoProveedorBeneficiario(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListaNotasDebitoProveedorBeneficiario_Result>("sp_ListaNotasDebitoProveedorBeneficiario", idProveedorParameter);
        }
    
        public virtual ObjectResult<sp_ListaNotasDebitoXBeneficiario_Result> sp_ListaNotasDebitoXBeneficiario(Nullable<int> idCliente, string tipo)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListaNotasDebitoXBeneficiario_Result>("sp_ListaNotasDebitoXBeneficiario", idClienteParameter, tipoParameter);
        }
    
        public virtual ObjectResult<SP_ListaProductosSalidaInventario_Result> SP_ListaProductosSalidaInventario(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaProductosSalidaInventario_Result>("SP_ListaProductosSalidaInventario", idSolicitudParameter);
        }
    
        public virtual ObjectResult<sp_MinutaDeposito_Result> sp_MinutaDeposito()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MinutaDeposito_Result>("sp_MinutaDeposito");
        }
    
        public virtual ObjectResult<sp_MontosTransferenciaFacturas_Result> sp_MontosTransferenciaFacturas(Nullable<int> idAperturaCaja, Nullable<int> idCaj)
        {
            var idAperturaCajaParameter = idAperturaCaja.HasValue ?
                new ObjectParameter("IdAperturaCaja", idAperturaCaja) :
                new ObjectParameter("IdAperturaCaja", typeof(int));
    
            var idCajParameter = idCaj.HasValue ?
                new ObjectParameter("IdCaj", idCaj) :
                new ObjectParameter("IdCaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MontosTransferenciaFacturas_Result>("sp_MontosTransferenciaFacturas", idAperturaCajaParameter, idCajParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_MontoTotalMonedaXIdRecibo(string moneda, Nullable<int> idRecibo)
        {
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("IdRecibo", idRecibo) :
                new ObjectParameter("IdRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_MontoTotalMonedaXIdRecibo", monedaParameter, idReciboParameter);
        }
    
        public virtual ObjectResult<Sp_MostarCalendarioMantenimientoXEstado_Result> Sp_MostarCalendarioMantenimientoXEstado(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostarCalendarioMantenimientoXEstado_Result>("Sp_MostarCalendarioMantenimientoXEstado", estadoParameter);
        }
    
        public virtual ObjectResult<Sp_MostrarDetalleEstadoCuentaXCliente_Result> Sp_MostrarDetalleEstadoCuentaXCliente(Nullable<int> idCliente, Nullable<int> idEmpresa, string moneda)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostrarDetalleEstadoCuentaXCliente_Result>("Sp_MostrarDetalleEstadoCuentaXCliente", idClienteParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<SP_MOSTRARFACTURAS_COMPRA_Result> SP_MOSTRARFACTURAS_COMPRA(Nullable<int> iDEMPRESA, Nullable<int> iDPROVEEDOR, string fINICIO, string fFIN)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var iDPROVEEDORParameter = iDPROVEEDOR.HasValue ?
                new ObjectParameter("IDPROVEEDOR", iDPROVEEDOR) :
                new ObjectParameter("IDPROVEEDOR", typeof(int));
    
            var fINICIOParameter = fINICIO != null ?
                new ObjectParameter("FINICIO", fINICIO) :
                new ObjectParameter("FINICIO", typeof(string));
    
            var fFINParameter = fFIN != null ?
                new ObjectParameter("FFIN", fFIN) :
                new ObjectParameter("FFIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRARFACTURAS_COMPRA_Result>("SP_MOSTRARFACTURAS_COMPRA", iDEMPRESAParameter, iDPROVEEDORParameter, fINICIOParameter, fFINParameter);
        }
    
        public virtual ObjectResult<SP_MOSTRARFACTURAS_NOTADEBITO_Result> SP_MOSTRARFACTURAS_NOTADEBITO(Nullable<int> iDEMPRESA, Nullable<int> iDPROVEEDOR, string fINICIO, string fFIN)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var iDPROVEEDORParameter = iDPROVEEDOR.HasValue ?
                new ObjectParameter("IDPROVEEDOR", iDPROVEEDOR) :
                new ObjectParameter("IDPROVEEDOR", typeof(int));
    
            var fINICIOParameter = fINICIO != null ?
                new ObjectParameter("FINICIO", fINICIO) :
                new ObjectParameter("FINICIO", typeof(string));
    
            var fFINParameter = fFIN != null ?
                new ObjectParameter("FFIN", fFIN) :
                new ObjectParameter("FFIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRARFACTURAS_NOTADEBITO_Result>("SP_MOSTRARFACTURAS_NOTADEBITO", iDEMPRESAParameter, iDPROVEEDORParameter, fINICIOParameter, fFINParameter);
        }
    
        public virtual ObjectResult<sp_MostrarFacturasCredito_Proveedor_Result> sp_MostrarFacturasCredito_Proveedor(Nullable<int> idempresa, Nullable<int> idProveedor, string fechaInicio, string fechaFin)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MostrarFacturasCredito_Proveedor_Result>("sp_MostrarFacturasCredito_Proveedor", idempresaParameter, idProveedorParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<sp_MostrarLiquidacion_Result> sp_MostrarLiquidacion(string estado, Nullable<int> idEmpresa)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MostrarLiquidacion_Result>("sp_MostrarLiquidacion", estadoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_MostrarLiquidacionEmpleado_Result> sp_MostrarLiquidacionEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MostrarLiquidacionEmpleado_Result>("sp_MostrarLiquidacionEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<Sp_MostrarPedidoOtrosProductosAprobados_Result> Sp_MostrarPedidoOtrosProductosAprobados(Nullable<int> idempleado, Nullable<int> idempresa)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostrarPedidoOtrosProductosAprobados_Result>("Sp_MostrarPedidoOtrosProductosAprobados", idempleadoParameter, idempresaParameter);
        }
    
        public virtual ObjectResult<Sp_MostrarPedidoOtrosProductosEnProceso_Result> Sp_MostrarPedidoOtrosProductosEnProceso(Nullable<int> idempleado, Nullable<int> idempresa)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostrarPedidoOtrosProductosEnProceso_Result>("Sp_MostrarPedidoOtrosProductosEnProceso", idempleadoParameter, idempresaParameter);
        }
    
        public virtual ObjectResult<Sp_MostrarReembolsoAEditarSLChequeXIdEmpleado_Result> Sp_MostrarReembolsoAEditarSLChequeXIdEmpleado(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostrarReembolsoAEditarSLChequeXIdEmpleado_Result>("Sp_MostrarReembolsoAEditarSLChequeXIdEmpleado", idSolicitudParameter);
        }
    
        public virtual ObjectResult<Sp_MostrarReembolsoXIdEmpleadoSLCheque_Result> Sp_MostrarReembolsoXIdEmpleadoSLCheque(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MostrarReembolsoXIdEmpleadoSLCheque_Result>("Sp_MostrarReembolsoXIdEmpleadoSLCheque", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<sp_MostrarSolicitudesAperturaOTPendientes_Result> sp_MostrarSolicitudesAperturaOTPendientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MostrarSolicitudesAperturaOTPendientes_Result>("sp_MostrarSolicitudesAperturaOTPendientes");
        }
    
        public virtual ObjectResult<Sp_ObtenerAccesoriosOT_Result> Sp_ObtenerAccesoriosOT(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ObtenerAccesoriosOT_Result>("Sp_ObtenerAccesoriosOT", idOrdenParameter);
        }
    
        public virtual ObjectResult<sp_obtenerRetencionesXEstados_Result> sp_obtenerRetencionesXEstados(string estados, Nullable<int> idEmpresa)
        {
            var estadosParameter = estados != null ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerRetencionesXEstados_Result>("sp_obtenerRetencionesXEstados", estadosParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_ObtenerserviciosOT_Result> Sp_ObtenerserviciosOT(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ObtenerserviciosOT_Result>("Sp_ObtenerserviciosOT", idOrdenParameter);
        }
    
        public virtual ObjectResult<Sp_PagoFacturasPendienteProveedores_Result> Sp_PagoFacturasPendienteProveedores(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PagoFacturasPendienteProveedores_Result>("Sp_PagoFacturasPendienteProveedores", idempresaParameter);
        }
    
        public virtual ObjectResult<Sp_PagoFacturasPendientes_Result> Sp_PagoFacturasPendientes(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PagoFacturasPendientes_Result>("Sp_PagoFacturasPendientes", idempresaParameter);
        }
    
        public virtual int Sp_PagoProveedor(string tipo, Nullable<int> idFactura)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_PagoProveedor", tipoParameter, idFacturaParameter);
        }
    
        public virtual ObjectResult<sp_PreFacturaInternaOT_Result> sp_PreFacturaInternaOT(Nullable<int> idPreFactura)
        {
            var idPreFacturaParameter = idPreFactura.HasValue ?
                new ObjectParameter("IdPreFactura", idPreFactura) :
                new ObjectParameter("IdPreFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PreFacturaInternaOT_Result>("sp_PreFacturaInternaOT", idPreFacturaParameter);
        }
    
        public virtual ObjectResult<sp_PreFacturaOT_Result> sp_PreFacturaOT(Nullable<int> idPreFactura)
        {
            var idPreFacturaParameter = idPreFactura.HasValue ?
                new ObjectParameter("IdPreFactura", idPreFactura) :
                new ObjectParameter("IdPreFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PreFacturaOT_Result>("sp_PreFacturaOT", idPreFacturaParameter);
        }
    
        public virtual ObjectResult<sp_PrefacturasInternasXEstado_Result> sp_PrefacturasInternasXEstado(Nullable<int> idEmpresa, string varEstados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var varEstadosParameter = varEstados != null ?
                new ObjectParameter("VarEstados", varEstados) :
                new ObjectParameter("VarEstados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PrefacturasInternasXEstado_Result>("sp_PrefacturasInternasXEstado", idEmpresaParameter, varEstadosParameter);
        }
    
        public virtual ObjectResult<Sp_Principal_CargarDatosFACTURA_OT_Result> Sp_Principal_CargarDatosFACTURA_OT(Nullable<int> idEmpresa, Nullable<int> idPrefacturaOT, Nullable<int> idCaja)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idPrefacturaOTParameter = idPrefacturaOT.HasValue ?
                new ObjectParameter("IdPrefacturaOT", idPrefacturaOT) :
                new ObjectParameter("IdPrefacturaOT", typeof(int));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Principal_CargarDatosFACTURA_OT_Result>("Sp_Principal_CargarDatosFACTURA_OT", idEmpresaParameter, idPrefacturaOTParameter, idCajaParameter);
        }
    
        public virtual ObjectResult<Sp_Principal_CargarDatosFACTURA_OTCANCELADO_Result> Sp_Principal_CargarDatosFACTURA_OTCANCELADO(Nullable<int> idEmpresa, Nullable<int> idPrefacturaOT, Nullable<int> idCaja)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idPrefacturaOTParameter = idPrefacturaOT.HasValue ?
                new ObjectParameter("IdPrefacturaOT", idPrefacturaOT) :
                new ObjectParameter("IdPrefacturaOT", typeof(int));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Principal_CargarDatosFACTURA_OTCANCELADO_Result>("Sp_Principal_CargarDatosFACTURA_OTCANCELADO", idEmpresaParameter, idPrefacturaOTParameter, idCajaParameter);
        }
    
        public virtual ObjectResult<sp_RecibosNoAplicadosXCliente_Result> sp_RecibosNoAplicadosXCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RecibosNoAplicadosXCliente_Result>("sp_RecibosNoAplicadosXCliente", idClienteParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<Sp_ReporteCalendarioVacaciones_Result> Sp_ReporteCalendarioVacaciones(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReporteCalendarioVacaciones_Result>("Sp_ReporteCalendarioVacaciones", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SP_ReporteEstadosOT_Result> SP_ReporteEstadosOT(Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, string estadoOT, Nullable<int> idEmpresa)
        {
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("FechaInicial", fechaInicial) :
                new ObjectParameter("FechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoOTParameter = estadoOT != null ?
                new ObjectParameter("EstadoOT", estadoOT) :
                new ObjectParameter("EstadoOT", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ReporteEstadosOT_Result>("SP_ReporteEstadosOT", fechaInicialParameter, fechaFinalParameter, estadoOTParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<sp_ReporteGeneralOT_Result> sp_ReporteGeneralOT(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa, string moneda)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteGeneralOT_Result>("sp_ReporteGeneralOT", fechaInicioParameter, fechaFinParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<Sp_ReporteNominaAprobada_Result> Sp_ReporteNominaAprobada(string periodo, string idEmpresa)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var idEmpresaParameter = idEmpresa != null ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReporteNominaAprobada_Result>("Sp_ReporteNominaAprobada", periodoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_ReporteSubsidioAplicados_Result> Sp_ReporteSubsidioAplicados(string periodo, string idEmpresa)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var idEmpresaParameter = idEmpresa != null ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ReporteSubsidioAplicados_Result>("Sp_ReporteSubsidioAplicados", periodoParameter, idEmpresaParameter);
        }
    
        public virtual int Sp_RevertircantidadProductoCalendarioAlimento(Nullable<int> idCalendarioAlimento, Nullable<int> solicitado)
        {
            var idCalendarioAlimentoParameter = idCalendarioAlimento.HasValue ?
                new ObjectParameter("IdCalendarioAlimento", idCalendarioAlimento) :
                new ObjectParameter("IdCalendarioAlimento", typeof(int));
    
            var solicitadoParameter = solicitado.HasValue ?
                new ObjectParameter("solicitado", solicitado) :
                new ObjectParameter("solicitado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_RevertircantidadProductoCalendarioAlimento", idCalendarioAlimentoParameter, solicitadoParameter);
        }
    
        public virtual int Sp_SaldoVacaciones(Nullable<int> idEmpleado, ObjectParameter calculoVacaciones)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SaldoVacaciones", idEmpleadoParameter, calculoVacaciones);
        }
    
        public virtual ObjectResult<SP_SalidaInventario_Result> SP_SalidaInventario(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalidaInventario_Result>("SP_SalidaInventario", idSolicitudParameter);
        }
    
        public virtual ObjectResult<sp_SolicitudesPaseCredito_Result> sp_SolicitudesPaseCredito(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SolicitudesPaseCredito_Result>("sp_SolicitudesPaseCredito", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_TotalFacturaConDevoluciones_Result> Sp_TotalFacturaConDevoluciones(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TotalFacturaConDevoluciones_Result>("Sp_TotalFacturaConDevoluciones", idFacturaParameter);
        }
    
        public virtual ObjectResult<Sp_TotalFacturasPendientesPVXIdCliente_Result> Sp_TotalFacturasPendientesPVXIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TotalFacturasPendientesPVXIdCliente_Result>("Sp_TotalFacturasPendientesPVXIdCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<Sp_TotalFacturasPendientesSACXIdCliente_Result> Sp_TotalFacturasPendientesSACXIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TotalFacturasPendientesSACXIdCliente_Result>("Sp_TotalFacturasPendientesSACXIdCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_TrasladosDirectosSinDespacho_Result> sp_TrasladosDirectosSinDespacho(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TrasladosDirectosSinDespacho_Result>("sp_TrasladosDirectosSinDespacho", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<sp_TrasladosXSolicitudSinDespacho_Result> sp_TrasladosXSolicitudSinDespacho(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TrasladosXSolicitudSinDespacho_Result>("sp_TrasladosXSolicitudSinDespacho", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<string> sp_UltimoEstadoIdentificadorProducto(Nullable<int> id_Identificador)
        {
            var id_IdentificadorParameter = id_Identificador.HasValue ?
                new ObjectParameter("Id_Identificador", id_Identificador) :
                new ObjectParameter("Id_Identificador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_UltimoEstadoIdentificadorProducto", id_IdentificadorParameter);
        }
    
        public virtual ObjectResult<sp_UltimoRegistroMovimientoKardexPorBodega_Result> sp_UltimoRegistroMovimientoKardexPorBodega(Nullable<int> idBodega)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UltimoRegistroMovimientoKardexPorBodega_Result>("sp_UltimoRegistroMovimientoKardexPorBodega", idBodegaParameter);
        }
    
        public virtual ObjectResult<sp_UltimoRegistroMovimientoKardexPorBodegaOrdenProduccion_Result> sp_UltimoRegistroMovimientoKardexPorBodegaOrdenProduccion(Nullable<int> idBodega, Nullable<int> idOrdenProduccion)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UltimoRegistroMovimientoKardexPorBodegaOrdenProduccion_Result>("sp_UltimoRegistroMovimientoKardexPorBodegaOrdenProduccion", idBodegaParameter, idOrdenProduccionParameter);
        }
    
        public virtual ObjectResult<sp_UltimoRegistroMovimientoKardexPorBodegaOrdenTrabajo_Result> sp_UltimoRegistroMovimientoKardexPorBodegaOrdenTrabajo(Nullable<int> idBodega, Nullable<int> idOrdenTrabajo)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("IdOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("IdOrdenTrabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UltimoRegistroMovimientoKardexPorBodegaOrdenTrabajo_Result>("sp_UltimoRegistroMovimientoKardexPorBodegaOrdenTrabajo", idBodegaParameter, idOrdenTrabajoParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Sp_VistaEmpleadosVacaciones_Result> Sp_VistaEmpleadosVacaciones(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VistaEmpleadosVacaciones_Result>("Sp_VistaEmpleadosVacaciones", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_VistaPagoProveedorXEstadoActualizada_Result> Sp_VistaPagoProveedorXEstadoActualizada(Nullable<int> idempresa, string estadoPago)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var estadoPagoParameter = estadoPago != null ?
                new ObjectParameter("EstadoPago", estadoPago) :
                new ObjectParameter("EstadoPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VistaPagoProveedorXEstadoActualizada_Result>("Sp_VistaPagoProveedorXEstadoActualizada", idempresaParameter, estadoPagoParameter);
        }
    
        public virtual ObjectResult<Sp_VistaPagoProveedorXEstadoConfir_Result> Sp_VistaPagoProveedorXEstadoConfir(Nullable<int> idempresa, string estadoPago)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var estadoPagoParameter = estadoPago != null ?
                new ObjectParameter("EstadoPago", estadoPago) :
                new ObjectParameter("EstadoPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VistaPagoProveedorXEstadoConfir_Result>("Sp_VistaPagoProveedorXEstadoConfir", idempresaParameter, estadoPagoParameter);
        }
    
        public virtual ObjectResult<Sp_VistaStockXProducto_Result> Sp_VistaStockXProducto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VistaStockXProducto_Result>("Sp_VistaStockXProducto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Sp_VistaStockXProductoXBodega_Result> Sp_VistaStockXProductoXBodega(Nullable<int> idEmpresa, Nullable<int> idBodega)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VistaStockXProductoXBodega_Result>("Sp_VistaStockXProductoXBodega", idEmpresaParameter, idBodegaParameter);
        }
    
        public virtual ObjectResult<Sp_VwMostrarEntregaEquipos_Result> Sp_VwMostrarEntregaEquipos(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VwMostrarEntregaEquipos_Result>("Sp_VwMostrarEntregaEquipos", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spAnulacionPrefacturaInterna_Result> spAnulacionPrefacturaInterna(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAnulacionPrefacturaInterna_Result>("spAnulacionPrefacturaInterna", idSucursalParameter);
        }
    
        public virtual ObjectResult<spArqueoReciboCajaGeneral_Result> spArqueoReciboCajaGeneral(Nullable<int> idCaja, Nullable<int> idAperturaCaja)
        {
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var idAperturaCajaParameter = idAperturaCaja.HasValue ?
                new ObjectParameter("IdAperturaCaja", idAperturaCaja) :
                new ObjectParameter("IdAperturaCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spArqueoReciboCajaGeneral_Result>("spArqueoReciboCajaGeneral", idCajaParameter, idAperturaCajaParameter);
        }
    
        public virtual ObjectResult<SpAsignacionTecnicoServicioEditarXIdOT_Result> SpAsignacionTecnicoServicioEditarXIdOT(Nullable<int> idOT)
        {
            var idOTParameter = idOT.HasValue ?
                new ObjectParameter("IdOT", idOT) :
                new ObjectParameter("IdOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAsignacionTecnicoServicioEditarXIdOT_Result>("SpAsignacionTecnicoServicioEditarXIdOT", idOTParameter);
        }
    
        public virtual ObjectResult<SpAsignacionTS_EditarXIdOT_Result> SpAsignacionTS_EditarXIdOT(Nullable<int> idOT)
        {
            var idOTParameter = idOT.HasValue ?
                new ObjectParameter("IdOT", idOT) :
                new ObjectParameter("IdOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpAsignacionTS_EditarXIdOT_Result>("SpAsignacionTS_EditarXIdOT", idOTParameter);
        }
    
        public virtual ObjectResult<SpBitacoraModuloSistema_Result> SpBitacoraModuloSistema(Nullable<int> idEmpresa, string sistema)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBitacoraModuloSistema_Result>("SpBitacoraModuloSistema", idEmpresaParameter, sistemaParameter);
        }
    
        public virtual ObjectResult<SpBitacoraUsuario_Result> SpBitacoraUsuario(Nullable<int> idEmpresa, string sistema)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBitacoraUsuario_Result>("SpBitacoraUsuario", idEmpresaParameter, sistemaParameter);
        }
    
        public virtual ObjectResult<SpBitacoraUsuarioXTipoCuentaXFechas_Result> SpBitacoraUsuarioXTipoCuentaXFechas(Nullable<int> idCuenta, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("idCuenta", idCuenta) :
                new ObjectParameter("idCuenta", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBitacoraUsuarioXTipoCuentaXFechas_Result>("SpBitacoraUsuarioXTipoCuentaXFechas", idCuentaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpBitacoraUsuarioXUsuarioXFechas_Result> SpBitacoraUsuarioXUsuarioXFechas(Nullable<int> idUsuario, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBitacoraUsuarioXUsuarioXFechas_Result>("SpBitacoraUsuarioXUsuarioXFechas", idUsuarioParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<spCajasAperturadasReporteCierreDia_Result> spCajasAperturadasReporteCierreDia(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCajasAperturadasReporteCierreDia_Result>("spCajasAperturadasReporteCierreDia", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCajasAsignadasAperturaDiaReporte_Result> spCajasAsignadasAperturaDiaReporte(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCajasAsignadasAperturaDiaReporte_Result>("spCajasAsignadasAperturaDiaReporte", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCajasDisponiblesAperturaDiaReporte_Result> spCajasDisponiblesAperturaDiaReporte(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCajasDisponiblesAperturaDiaReporte_Result>("spCajasDisponiblesAperturaDiaReporte", idSucursalParameter);
        }
    
        public virtual int SpCalcularIR(Nullable<decimal> salarioOrdinario, Nullable<int> idEmpleado, string configuracion, ObjectParameter iR)
        {
            var salarioOrdinarioParameter = salarioOrdinario.HasValue ?
                new ObjectParameter("SalarioOrdinario", salarioOrdinario) :
                new ObjectParameter("SalarioOrdinario", typeof(decimal));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var configuracionParameter = configuracion != null ?
                new ObjectParameter("Configuracion", configuracion) :
                new ObjectParameter("Configuracion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCalcularIR", salarioOrdinarioParameter, idEmpleadoParameter, configuracionParameter, iR);
        }
    
        public virtual int SpCalcularTotalOtrasDeducciones(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter deduccion)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCalcularTotalOtrasDeducciones", idEmpresaParameter, idEmpleadoParameter, periodoParameter, deduccion);
        }
    
        public virtual int SpCalcularTotalOtrosIngresos(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter ingresos)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCalcularTotalOtrosIngresos", idEmpresaParameter, idEmpleadoParameter, periodoParameter, ingresos);
        }
    
        public virtual int SpCalcularTotalSubsidios(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter sub)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCalcularTotalSubsidios", idEmpresaParameter, idEmpleadoParameter, periodoParameter, sub);
        }
    
        public virtual ObjectResult<SpCantidadesDeducir_Result> SpCantidadesDeducir(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCantidadesDeducir_Result>("SpCantidadesDeducir", idPedidoParameter);
        }
    
        public virtual ObjectResult<spCantLoteExcluidosXCompra_Result> spCantLoteExcluidosXCompra(Nullable<int> idCompra, Nullable<int> idProducto)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCantLoteExcluidosXCompra_Result>("spCantLoteExcluidosXCompra", idCompraParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<SpCargaFlotaXId_Result> SpCargaFlotaXId(Nullable<int> idFlota)
        {
            var idFlotaParameter = idFlota.HasValue ?
                new ObjectParameter("idFlota", idFlota) :
                new ObjectParameter("idFlota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargaFlotaXId_Result>("SpCargaFlotaXId", idFlotaParameter);
        }
    
        public virtual ObjectResult<SpCargaImagenxFlota_Result> SpCargaImagenxFlota(Nullable<int> idFlota)
        {
            var idFlotaParameter = idFlota.HasValue ?
                new ObjectParameter("idFlota", idFlota) :
                new ObjectParameter("idFlota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargaImagenxFlota_Result>("SpCargaImagenxFlota", idFlotaParameter);
        }
    
        public virtual ObjectResult<SpCargarComprasRealizadasPorSucursal_Result> SpCargarComprasRealizadasPorSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarComprasRealizadasPorSucursal_Result>("SpCargarComprasRealizadasPorSucursal", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCargarDatosAEditarPagoRealizadoTesoreria_Result> spCargarDatosAEditarPagoRealizadoTesoreria(Nullable<int> idPagoRealizarTesoreria)
        {
            var idPagoRealizarTesoreriaParameter = idPagoRealizarTesoreria.HasValue ?
                new ObjectParameter("idPagoRealizarTesoreria", idPagoRealizarTesoreria) :
                new ObjectParameter("idPagoRealizarTesoreria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosAEditarPagoRealizadoTesoreria_Result>("spCargarDatosAEditarPagoRealizadoTesoreria", idPagoRealizarTesoreriaParameter);
        }
    
        public virtual ObjectResult<spCargarDatosMinutaDeposito_MovimientoBancarioXCuenta_Result> spCargarDatosMinutaDeposito_MovimientoBancarioXCuenta(Nullable<int> idCuentaBanco)
        {
            var idCuentaBancoParameter = idCuentaBanco.HasValue ?
                new ObjectParameter("idCuentaBanco", idCuentaBanco) :
                new ObjectParameter("idCuentaBanco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosMinutaDeposito_MovimientoBancarioXCuenta_Result>("spCargarDatosMinutaDeposito_MovimientoBancarioXCuenta", idCuentaBancoParameter);
        }
    
        public virtual ObjectResult<spCargarDatosMovimientoBancario_General_Result> spCargarDatosMovimientoBancario_General(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosMovimientoBancario_General_Result>("spCargarDatosMovimientoBancario_General", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spCargarDatosMovimientoBancarioXBanco_Result> spCargarDatosMovimientoBancarioXBanco(Nullable<int> idBanco)
        {
            var idBancoParameter = idBanco.HasValue ?
                new ObjectParameter("idBanco", idBanco) :
                new ObjectParameter("idBanco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosMovimientoBancarioXBanco_Result>("spCargarDatosMovimientoBancarioXBanco", idBancoParameter);
        }
    
        public virtual ObjectResult<spCargarDatosMovimientoBancarioXCuenta_Result> spCargarDatosMovimientoBancarioXCuenta(Nullable<int> idCuentaBanco)
        {
            var idCuentaBancoParameter = idCuentaBanco.HasValue ?
                new ObjectParameter("idCuentaBanco", idCuentaBanco) :
                new ObjectParameter("idCuentaBanco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosMovimientoBancarioXCuenta_Result>("spCargarDatosMovimientoBancarioXCuenta", idCuentaBancoParameter);
        }
    
        public virtual ObjectResult<spCargarDatosMovimientoBancarioXTipoMoneda_Result> spCargarDatosMovimientoBancarioXTipoMoneda(string tipoMoneda)
        {
            var tipoMonedaParameter = tipoMoneda != null ?
                new ObjectParameter("TipoMoneda", tipoMoneda) :
                new ObjectParameter("TipoMoneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosMovimientoBancarioXTipoMoneda_Result>("spCargarDatosMovimientoBancarioXTipoMoneda", tipoMonedaParameter);
        }
    
        public virtual ObjectResult<spCargarDatosOrdenTrabajo_Result> spCargarDatosOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("IdOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("IdOrdenTrabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosOrdenTrabajo_Result>("spCargarDatosOrdenTrabajo", idOrdenTrabajoParameter);
        }
    
        public virtual ObjectResult<spCargarDatosPagoRealizadoTesoreria_MovimientoBancarioXCuenta_Result> spCargarDatosPagoRealizadoTesoreria_MovimientoBancarioXCuenta(Nullable<int> idCuentaBanco)
        {
            var idCuentaBancoParameter = idCuentaBanco.HasValue ?
                new ObjectParameter("idCuentaBanco", idCuentaBanco) :
                new ObjectParameter("idCuentaBanco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarDatosPagoRealizadoTesoreria_MovimientoBancarioXCuenta_Result>("spCargarDatosPagoRealizadoTesoreria_MovimientoBancarioXCuenta", idCuentaBancoParameter);
        }
    
        public virtual ObjectResult<SpCargarDetalleDePrefactura_Result> SpCargarDetalleDePrefactura(Nullable<int> idPreFacturaOT)
        {
            var idPreFacturaOTParameter = idPreFacturaOT.HasValue ?
                new ObjectParameter("IdPreFacturaOT", idPreFacturaOT) :
                new ObjectParameter("IdPreFacturaOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarDetalleDePrefactura_Result>("SpCargarDetalleDePrefactura", idPreFacturaOTParameter);
        }
    
        public virtual ObjectResult<SpCargarDetalleDePrefactura_Reporte_Result> SpCargarDetalleDePrefactura_Reporte(Nullable<int> idPreFacturaOT)
        {
            var idPreFacturaOTParameter = idPreFacturaOT.HasValue ?
                new ObjectParameter("IdPreFacturaOT", idPreFacturaOT) :
                new ObjectParameter("IdPreFacturaOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarDetalleDePrefactura_Reporte_Result>("SpCargarDetalleDePrefactura_Reporte", idPreFacturaOTParameter);
        }
    
        public virtual ObjectResult<SpCargarDetalleFacturaEnDevolucion_Result> SpCargarDetalleFacturaEnDevolucion(Nullable<int> idPreFacturaOT)
        {
            var idPreFacturaOTParameter = idPreFacturaOT.HasValue ?
                new ObjectParameter("IdPreFacturaOT", idPreFacturaOT) :
                new ObjectParameter("IdPreFacturaOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarDetalleFacturaEnDevolucion_Result>("SpCargarDetalleFacturaEnDevolucion", idPreFacturaOTParameter);
        }
    
        public virtual ObjectResult<SpCargarDetalleFacturaInterna_Result> SpCargarDetalleFacturaInterna(Nullable<int> idPreFacturaInt)
        {
            var idPreFacturaIntParameter = idPreFacturaInt.HasValue ?
                new ObjectParameter("IdPreFacturaInt", idPreFacturaInt) :
                new ObjectParameter("IdPreFacturaInt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarDetalleFacturaInterna_Result>("SpCargarDetalleFacturaInterna", idPreFacturaIntParameter);
        }
    
        public virtual ObjectResult<spCargarFacturas_Cliente_NotaDebitoCredito_Result> spCargarFacturas_Cliente_NotaDebitoCredito(Nullable<int> idNota, Nullable<int> idEmpresa)
        {
            var idNotaParameter = idNota.HasValue ?
                new ObjectParameter("idNota", idNota) :
                new ObjectParameter("idNota", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturas_Cliente_NotaDebitoCredito_Result>("spCargarFacturas_Cliente_NotaDebitoCredito", idNotaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<spCargarFacturas_Proveedor_NotaDebitoCredito_Result> spCargarFacturas_Proveedor_NotaDebitoCredito(Nullable<int> idNota, Nullable<int> idEmpresa)
        {
            var idNotaParameter = idNota.HasValue ?
                new ObjectParameter("idNota", idNota) :
                new ObjectParameter("idNota", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturas_Proveedor_NotaDebitoCredito_Result>("spCargarFacturas_Proveedor_NotaDebitoCredito", idNotaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<spCargarFacturasAnuladas_Result> spCargarFacturasAnuladas(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturasAnuladas_Result>("spCargarFacturasAnuladas", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCargarFacturasCancelada_Result> spCargarFacturasCancelada(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturasCancelada_Result>("spCargarFacturasCancelada", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCargarFacturasConDevoluciones_Result> spCargarFacturasConDevoluciones(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturasConDevoluciones_Result>("spCargarFacturasConDevoluciones", idSucursalParameter);
        }
    
        public virtual ObjectResult<spCargarFacturasConDevolucionesCliente_Result> spCargarFacturasConDevolucionesCliente(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarFacturasConDevolucionesCliente_Result>("spCargarFacturasConDevolucionesCliente", idSucursalParameter);
        }
    
        public virtual ObjectResult<SpCargarFacturasRealizadasPorSucursal_Result> SpCargarFacturasRealizadasPorSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarFacturasRealizadasPorSucursal_Result>("SpCargarFacturasRealizadasPorSucursal", idSucursalParameter);
        }
    
        public virtual ObjectResult<SpCargarFacturasRealizadasPorSucursales_Result> SpCargarFacturasRealizadasPorSucursales(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarFacturasRealizadasPorSucursales_Result>("SpCargarFacturasRealizadasPorSucursales", idSucursalParameter);
        }
    
        public virtual int spCargarFacturasxEstado_EstadoCuenta(Nullable<int> idCliente, string estadoFac, string moneda)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoFacParameter = estadoFac != null ?
                new ObjectParameter("EstadoFac", estadoFac) :
                new ObjectParameter("EstadoFac", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCargarFacturasxEstado_EstadoCuenta", idClienteParameter, estadoFacParameter, monedaParameter);
        }
    
        public virtual ObjectResult<SpCargarListaCriterioCobranza_Result> SpCargarListaCriterioCobranza(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarListaCriterioCobranza_Result>("SpCargarListaCriterioCobranza", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spCargarNotaCredito_ReporteXId_Result> spCargarNotaCredito_ReporteXId(Nullable<int> idNotaCredito, Nullable<int> idEmpresa)
        {
            var idNotaCreditoParameter = idNotaCredito.HasValue ?
                new ObjectParameter("idNotaCredito", idNotaCredito) :
                new ObjectParameter("idNotaCredito", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarNotaCredito_ReporteXId_Result>("spCargarNotaCredito_ReporteXId", idNotaCreditoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<spCargarNotaDebito_Cliente_NotaCreditoXIdNota_Result> spCargarNotaDebito_Cliente_NotaCreditoXIdNota(Nullable<int> idNota, Nullable<int> idEmpresa)
        {
            var idNotaParameter = idNota.HasValue ?
                new ObjectParameter("idNota", idNota) :
                new ObjectParameter("idNota", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarNotaDebito_Cliente_NotaCreditoXIdNota_Result>("spCargarNotaDebito_Cliente_NotaCreditoXIdNota", idNotaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SPCARGARNOTADEBITO_PROVEEDOR_NOTACREDITO_Result> SPCARGARNOTADEBITO_PROVEEDOR_NOTACREDITO(Nullable<int> iDNOTA, Nullable<int> iDEMPRESA)
        {
            var iDNOTAParameter = iDNOTA.HasValue ?
                new ObjectParameter("IDNOTA", iDNOTA) :
                new ObjectParameter("IDNOTA", typeof(int));
    
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCARGARNOTADEBITO_PROVEEDOR_NOTACREDITO_Result>("SPCARGARNOTADEBITO_PROVEEDOR_NOTACREDITO", iDNOTAParameter, iDEMPRESAParameter);
        }
    
        public virtual ObjectResult<SpCargarNotasDebitoEstadoCuentaXIdCliente_Result> SpCargarNotasDebitoEstadoCuentaXIdCliente(Nullable<int> idCliente, Nullable<int> idEmpresa, string moneda)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarNotasDebitoEstadoCuentaXIdCliente_Result>("SpCargarNotasDebitoEstadoCuentaXIdCliente", idClienteParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<spCargarNotasDebitoGlobalXIdCliente_Result> spCargarNotasDebitoGlobalXIdCliente(Nullable<int> idCliente, string fechaInicio, string fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarNotasDebitoGlobalXIdCliente_Result>("spCargarNotasDebitoGlobalXIdCliente", idClienteParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<spCargarSL_EmisionCheque_Result> spCargarSL_EmisionCheque(Nullable<int> idEmrpesa, string fInicio, string fFin)
        {
            var idEmrpesaParameter = idEmrpesa.HasValue ?
                new ObjectParameter("IdEmrpesa", idEmrpesa) :
                new ObjectParameter("IdEmrpesa", typeof(int));
    
            var fInicioParameter = fInicio != null ?
                new ObjectParameter("FInicio", fInicio) :
                new ObjectParameter("FInicio", typeof(string));
    
            var fFinParameter = fFin != null ?
                new ObjectParameter("FFin", fFin) :
                new ObjectParameter("FFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarSL_EmisionCheque_Result>("spCargarSL_EmisionCheque", idEmrpesaParameter, fInicioParameter, fFinParameter);
        }
    
        public virtual ObjectResult<spCargarTasaCambioXFecha_Result> spCargarTasaCambioXFecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarTasaCambioXFecha_Result>("spCargarTasaCambioXFecha", fechaParameter);
        }
    
        public virtual ObjectResult<SpCargarTotalDeudaNDXCliente_Result> SpCargarTotalDeudaNDXCliente(Nullable<int> idcliente, Nullable<int> idEmpresa, string moneda)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCargarTotalDeudaNDXCliente_Result>("SpCargarTotalDeudaNDXCliente", idclienteParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<spCargarVistaProductosCodFam_Result> spCargarVistaProductosCodFam(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCargarVistaProductosCodFam_Result>("spCargarVistaProductosCodFam", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpCierredeDiaXSucursal_Result> SpCierredeDiaXSucursal(Nullable<int> idSucursal, Nullable<int> idAperturaDia)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idAperturaDiaParameter = idAperturaDia.HasValue ?
                new ObjectParameter("IdAperturaDia", idAperturaDia) :
                new ObjectParameter("IdAperturaDia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCierredeDiaXSucursal_Result>("SpCierredeDiaXSucursal", idSucursalParameter, idAperturaDiaParameter);
        }
    
        public virtual ObjectResult<SpComprasTotalesXEmpresa_Result> SpComprasTotalesXEmpresa(Nullable<int> idempresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpComprasTotalesXEmpresa_Result>("SpComprasTotalesXEmpresa", idempresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpConfirmarMovimiento(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpConfirmarMovimiento", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<spConsultaMinutaDeposito_Result> spConsultaMinutaDeposito(Nullable<int> idSucursal, Nullable<System.DateTime> fechaCierreIngresado)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            var fechaCierreIngresadoParameter = fechaCierreIngresado.HasValue ?
                new ObjectParameter("FechaCierreIngresado", fechaCierreIngresado) :
                new ObjectParameter("FechaCierreIngresado", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMinutaDeposito_Result>("spConsultaMinutaDeposito", idSucursalParameter, fechaCierreIngresadoParameter);
        }
    
        public virtual ObjectResult<spCostosManoObraXOrden_Result> spCostosManoObraXOrden(Nullable<int> idOrdenProduccion, Nullable<int> idEmpresa)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCostosManoObraXOrden_Result>("spCostosManoObraXOrden", idOrdenProduccionParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpCotizacionDetalleVenta_Result> SpCotizacionDetalleVenta(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCotizacionDetalleVenta_Result>("SpCotizacionDetalleVenta", idCotizacionParameter);
        }
    
        public virtual ObjectResult<SpCotizacionesElaboradasXEmpresaXFechas_Result> SpCotizacionesElaboradasXEmpresaXFechas(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCotizacionesElaboradasXEmpresaXFechas_Result>("SpCotizacionesElaboradasXEmpresaXFechas", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpCotizacionVentaTotales_Result> SpCotizacionVentaTotales(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCotizacionVentaTotales_Result>("SpCotizacionVentaTotales", idCotizacionParameter);
        }
    
        public virtual ObjectResult<spDatosAperturaCierreDia_Result> spDatosAperturaCierreDia(Nullable<int> idAperturaDia)
        {
            var idAperturaDiaParameter = idAperturaDia.HasValue ?
                new ObjectParameter("IdAperturaDia", idAperturaDia) :
                new ObjectParameter("IdAperturaDia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosAperturaCierreDia_Result>("spDatosAperturaCierreDia", idAperturaDiaParameter);
        }
    
        public virtual ObjectResult<SpDatosCajasParaReporteCierre_Result> SpDatosCajasParaReporteCierre(Nullable<int> idSucursal, Nullable<int> idAperturaDia)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idAperturaDiaParameter = idAperturaDia.HasValue ?
                new ObjectParameter("IdAperturaDia", idAperturaDia) :
                new ObjectParameter("IdAperturaDia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDatosCajasParaReporteCierre_Result>("SpDatosCajasParaReporteCierre", idSucursalParameter, idAperturaDiaParameter);
        }
    
        public virtual ObjectResult<spDatosClienteParaFacturaPV_Result> spDatosClienteParaFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosClienteParaFacturaPV_Result>("spDatosClienteParaFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDatosPrefacturaParaFacturaPV_Result> spDatosPrefacturaParaFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosPrefacturaParaFacturaPV_Result>("spDatosPrefacturaParaFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDatosProductosXSegmento_Result> spDatosProductosXSegmento(Nullable<int> idSegmento, string moneda)
        {
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("IdSegmento", idSegmento) :
                new ObjectParameter("IdSegmento", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosProductosXSegmento_Result>("spDatosProductosXSegmento", idSegmentoParameter, monedaParameter);
        }
    
        public virtual ObjectResult<SpDatosReciboCajaGeneral_Result> SpDatosReciboCajaGeneral(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("IdRecibo", idRecibo) :
                new ObjectParameter("IdRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDatosReciboCajaGeneral_Result>("SpDatosReciboCajaGeneral", idReciboParameter);
        }
    
        public virtual ObjectResult<spDatosRevisarCotizacion_Result> spDatosRevisarCotizacion(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosRevisarCotizacion_Result>("spDatosRevisarCotizacion", idCotizacionParameter);
        }
    
        public virtual ObjectResult<spDatosTrasladoParaReporte_Result> spDatosTrasladoParaReporte(Nullable<int> idtraslado)
        {
            var idtrasladoParameter = idtraslado.HasValue ?
                new ObjectParameter("Idtraslado", idtraslado) :
                new ObjectParameter("Idtraslado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDatosTrasladoParaReporte_Result>("spDatosTrasladoParaReporte", idtrasladoParameter);
        }
    
        public virtual ObjectResult<SpDatosVendedorFacturaPV_Result> SpDatosVendedorFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDatosVendedorFacturaPV_Result>("SpDatosVendedorFacturaPV", idPrefacturaParameter);
        }
    
        public virtual int SpDeduccionAlimentos(Nullable<int> idEmpleado, string periodo, ObjectParameter @out)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeduccionAlimentos", idEmpleadoParameter, periodoParameter, @out);
        }
    
        public virtual ObjectResult<spDetalleAperturaDiaReporte_Result> spDetalleAperturaDiaReporte(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleAperturaDiaReporte_Result>("spDetalleAperturaDiaReporte", idSucursalParameter);
        }
    
        public virtual ObjectResult<spDetalleCierreCaja_Result> spDetalleCierreCaja(Nullable<int> idCaja, Nullable<int> idAperturaCaja)
        {
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var idAperturaCajaParameter = idAperturaCaja.HasValue ?
                new ObjectParameter("IdAperturaCaja", idAperturaCaja) :
                new ObjectParameter("IdAperturaCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleCierreCaja_Result>("spDetalleCierreCaja", idCajaParameter, idAperturaCajaParameter);
        }
    
        public virtual ObjectResult<SpDetalleConfirmarAsignacionProductos_Result> SpDetalleConfirmarAsignacionProductos(Nullable<int> idAsignacion)
        {
            var idAsignacionParameter = idAsignacion.HasValue ?
                new ObjectParameter("IdAsignacion", idAsignacion) :
                new ObjectParameter("IdAsignacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleConfirmarAsignacionProductos_Result>("SpDetalleConfirmarAsignacionProductos", idAsignacionParameter);
        }
    
        public virtual ObjectResult<SpDetalleFacturaPV_Result> SpDetalleFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleFacturaPV_Result>("SpDetalleFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<SpDetalleInactecGenerado_Result> SpDetalleInactecGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInactecGenerado_Result>("SpDetalleInactecGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleInatec_Result> SpDetalleInatec(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInatec_Result>("SpDetalleInatec", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleInssLaboral_Result> SpDetalleInssLaboral(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInssLaboral_Result>("SpDetalleInssLaboral", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleInssLaboralGenerado_Result> SpDetalleInssLaboralGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInssLaboralGenerado_Result>("SpDetalleInssLaboralGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleInssPatronal_Result> SpDetalleInssPatronal(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInssPatronal_Result>("SpDetalleInssPatronal", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleInssPatronalGenerado_Result> SpDetalleInssPatronalGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleInssPatronalGenerado_Result>("SpDetalleInssPatronalGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleIR_Result> SpDetalleIR(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleIR_Result>("SpDetalleIR", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleIRGenerado_Result> SpDetalleIRGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleIRGenerado_Result>("SpDetalleIRGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleOtrasDeducciones_Result> SpDetalleOtrasDeducciones(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleOtrasDeducciones_Result>("SpDetalleOtrasDeducciones", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleOtrasDeduccionesGenerado_Result> SpDetalleOtrasDeduccionesGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleOtrasDeduccionesGenerado_Result>("SpDetalleOtrasDeduccionesGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleOtrosIngresos_Result> SpDetalleOtrosIngresos(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleOtrosIngresos_Result>("SpDetalleOtrosIngresos", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleOtrosIngresosGenerado_Result> SpDetalleOtrosIngresosGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleOtrosIngresosGenerado_Result>("SpDetalleOtrosIngresosGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<spDetalleParaFacturaPV_Result> spDetalleParaFacturaPV(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleParaFacturaPV_Result>("spDetalleParaFacturaPV", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<spDetalleParaTablaFacturaCelularPV_Result> spDetalleParaTablaFacturaCelularPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleParaTablaFacturaCelularPV_Result>("spDetalleParaTablaFacturaCelularPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDetalleParaTablaFacturaPV_Result> spDetalleParaTablaFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleParaTablaFacturaPV_Result>("spDetalleParaTablaFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDetalleParaTablaFacturaPVModificada_Result> spDetalleParaTablaFacturaPVModificada(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleParaTablaFacturaPVModificada_Result>("spDetalleParaTablaFacturaPVModificada", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<SpDetallePedido_Result> SpDetallePedido(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetallePedido_Result>("SpDetallePedido", idPedidoParameter);
        }
    
        public virtual ObjectResult<spDetallePrefacturaPV_Result> spDetallePrefacturaPV(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallePrefacturaPV_Result>("spDetallePrefacturaPV", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<spDetallePrefacturaPV_ReporteUtilidades_Result> spDetallePrefacturaPV_ReporteUtilidades(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallePrefacturaPV_ReporteUtilidades_Result>("spDetallePrefacturaPV_ReporteUtilidades", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<spDetallePrefacturaPVparaAnulacion_Result> spDetallePrefacturaPVparaAnulacion(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallePrefacturaPVparaAnulacion_Result>("spDetallePrefacturaPVparaAnulacion", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<spDetallePrefacturaPVParaDevolucion_Result> spDetallePrefacturaPVParaDevolucion(Nullable<int> idPrefacturaPV)
        {
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallePrefacturaPVParaDevolucion_Result>("spDetallePrefacturaPVParaDevolucion", idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<SpDetallePrefacturasOTXIdPrefacturaOT_Result> SpDetallePrefacturasOTXIdPrefacturaOT(Nullable<int> idPreFacturaOT, Nullable<int> idsegmento)
        {
            var idPreFacturaOTParameter = idPreFacturaOT.HasValue ?
                new ObjectParameter("IdPreFacturaOT", idPreFacturaOT) :
                new ObjectParameter("IdPreFacturaOT", typeof(int));
    
            var idsegmentoParameter = idsegmento.HasValue ?
                new ObjectParameter("idsegmento", idsegmento) :
                new ObjectParameter("idsegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetallePrefacturasOTXIdPrefacturaOT_Result>("SpDetallePrefacturasOTXIdPrefacturaOT", idPreFacturaOTParameter, idsegmentoParameter);
        }
    
        public virtual ObjectResult<spDetalleProductoCelularFacturaPV_Result> spDetalleProductoCelularFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleProductoCelularFacturaPV_Result>("spDetalleProductoCelularFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDetalleRevisarCotizacion_Result> spDetalleRevisarCotizacion(Nullable<int> idRevisarCotizacion)
        {
            var idRevisarCotizacionParameter = idRevisarCotizacion.HasValue ?
                new ObjectParameter("IdRevisarCotizacion", idRevisarCotizacion) :
                new ObjectParameter("IdRevisarCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleRevisarCotizacion_Result>("spDetalleRevisarCotizacion", idRevisarCotizacionParameter);
        }
    
        public virtual ObjectResult<spDetallesdeComprasXDevolicion_Result> spDetallesdeComprasXDevolicion(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallesdeComprasXDevolicion_Result>("spDetallesdeComprasXDevolicion", idCompraParameter);
        }
    
        public virtual ObjectResult<spDetalleSolicitudChequeXIdSolicitud_Result> spDetalleSolicitudChequeXIdSolicitud(Nullable<int> idSolicitud, Nullable<int> idEmpresa)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleSolicitudChequeXIdSolicitud_Result>("spDetalleSolicitudChequeXIdSolicitud", idSolicitudParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<spDetallesProductosXIdDevolicionCompra_Result> spDetallesProductosXIdDevolicionCompra(Nullable<int> idDevolucion)
        {
            var idDevolucionParameter = idDevolucion.HasValue ?
                new ObjectParameter("IdDevolucion", idDevolucion) :
                new ObjectParameter("IdDevolucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetallesProductosXIdDevolicionCompra_Result>("spDetallesProductosXIdDevolicionCompra", idDevolucionParameter);
        }
    
        public virtual ObjectResult<SpDetallesReciboCajaChica_Result> SpDetallesReciboCajaChica(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("IdRecibo", idRecibo) :
                new ObjectParameter("IdRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetallesReciboCajaChica_Result>("SpDetallesReciboCajaChica", idReciboParameter);
        }
    
        public virtual ObjectResult<SpDetalleSubsidios_Result> SpDetalleSubsidios(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleSubsidios_Result>("SpDetalleSubsidios", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpDetalleSubsidiosGenerado_Result> SpDetalleSubsidiosGenerado(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleSubsidiosGenerado_Result>("SpDetalleSubsidiosGenerado", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<spDetalleTotalFacturaPV_Result> spDetalleTotalFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleTotalFacturaPV_Result>("spDetalleTotalFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDetalleTotalFacturaPVCancelado_Result> spDetalleTotalFacturaPVCancelado(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleTotalFacturaPVCancelado_Result>("spDetalleTotalFacturaPVCancelado", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<spDetalleTrasladoParaReporte_Result> spDetalleTrasladoParaReporte(Nullable<int> idtraslado)
        {
            var idtrasladoParameter = idtraslado.HasValue ?
                new ObjectParameter("Idtraslado", idtraslado) :
                new ObjectParameter("Idtraslado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleTrasladoParaReporte_Result>("spDetalleTrasladoParaReporte", idtrasladoParameter);
        }
    
        public virtual ObjectResult<spDetalleVehiculoFacturaPV_Result> spDetalleVehiculoFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalleVehiculoFacturaPV_Result>("spDetalleVehiculoFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<SpDetalleXItemFacturaPV_Result> SpDetalleXItemFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDetalleXItemFacturaPV_Result>("SpDetalleXItemFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<SpDiferenciaFacturaYCupon_Result> SpDiferenciaFacturaYCupon(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDiferenciaFacturaYCupon_Result>("SpDiferenciaFacturaYCupon", idEmpresaParameter);
        }
    
        public virtual int spEditarEstadoFacturaXRecibo(Nullable<int> idReciboCajaGeneral, string estado)
        {
            var idReciboCajaGeneralParameter = idReciboCajaGeneral.HasValue ?
                new ObjectParameter("IdReciboCajaGeneral", idReciboCajaGeneral) :
                new ObjectParameter("IdReciboCajaGeneral", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarEstadoFacturaXRecibo", idReciboCajaGeneralParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SpEmpleadoConContrato_Result> SpEmpleadoConContrato(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEmpleadoConContrato_Result>("SpEmpleadoConContrato", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpEmpleadoSinContrato_Result> SpEmpleadoSinContrato(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEmpleadoSinContrato_Result>("SpEmpleadoSinContrato", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpEmpleadosXTipoCuenta_Result> SpEmpleadosXTipoCuenta(Nullable<int> idCuenta)
        {
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("idCuenta", idCuenta) :
                new ObjectParameter("idCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEmpleadosXTipoCuenta_Result>("SpEmpleadosXTipoCuenta", idCuentaParameter);
        }
    
        public virtual ObjectResult<SpEstadoCuentaGlobalXIdCliente_Result> SpEstadoCuentaGlobalXIdCliente(Nullable<int> idCliente, Nullable<int> idEmpresa, string tmoneda, string finicio, string ffin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var tmonedaParameter = tmoneda != null ?
                new ObjectParameter("Tmoneda", tmoneda) :
                new ObjectParameter("Tmoneda", typeof(string));
    
            var finicioParameter = finicio != null ?
                new ObjectParameter("Finicio", finicio) :
                new ObjectParameter("Finicio", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("Ffin", ffin) :
                new ObjectParameter("Ffin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEstadoCuentaGlobalXIdCliente_Result>("SpEstadoCuentaGlobalXIdCliente", idClienteParameter, idEmpresaParameter, tmonedaParameter, finicioParameter, ffinParameter);
        }
    
        public virtual ObjectResult<SpFactorPrecio_Result> SpFactorPrecio(Nullable<int> idSegmento)
        {
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("IdSegmento", idSegmento) :
                new ObjectParameter("IdSegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFactorPrecio_Result>("SpFactorPrecio", idSegmentoParameter);
        }
    
        public virtual ObjectResult<SpFactorPrecioPrueba_Result> SpFactorPrecioPrueba(Nullable<int> idSegmento)
        {
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("idSegmento", idSegmento) :
                new ObjectParameter("idSegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFactorPrecioPrueba_Result>("SpFactorPrecioPrueba", idSegmentoParameter);
        }
    
        public virtual ObjectResult<spFacturaClienteCordoba_Result> spFacturaClienteCordoba(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFacturaClienteCordoba_Result>("spFacturaClienteCordoba", idClienteParameter);
        }
    
        public virtual ObjectResult<spFacturaClienteDolar_Result> spFacturaClienteDolar(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFacturaClienteDolar_Result>("spFacturaClienteDolar", idClienteParameter);
        }
    
        public virtual ObjectResult<SpFacturasParaDespachoXEmpleado_Result> SpFacturasParaDespachoXEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFacturasParaDespachoXEmpleado_Result>("SpFacturasParaDespachoXEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpFacturasPendientePagoXCliente_Result> SpFacturasPendientePagoXCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFacturasPendientePagoXCliente_Result>("SpFacturasPendientePagoXCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<spFacturasVencidasPorClente_Result> spFacturasVencidasPorClente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFacturasVencidasPorClente_Result>("spFacturasVencidasPorClente", idClienteParameter);
        }
    
        public virtual ObjectResult<spFiltroReciboCajaGeneralXEstado_Result> spFiltroReciboCajaGeneralXEstado(Nullable<int> idEmpresa, string estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFiltroReciboCajaGeneralXEstado_Result>("spFiltroReciboCajaGeneralXEstado", idEmpresaParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SpGastosDepartamentoGeneral_Result> SpGastosDepartamentoGeneral(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosDepartamentoGeneral_Result>("SpGastosDepartamentoGeneral", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpGastosDePersonal_Result> SpGastosDePersonal(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string concepto)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosDePersonal_Result>("SpGastosDePersonal", idEmpresaParameter, idEmpleadoParameter, conceptoParameter);
        }
    
        public virtual ObjectResult<spGastosOperativos_Result> spGastosOperativos(Nullable<int> idEmpresa, string varEstados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var varEstadosParameter = varEstados != null ?
                new ObjectParameter("VarEstados", varEstados) :
                new ObjectParameter("VarEstados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGastosOperativos_Result>("spGastosOperativos", idEmpresaParameter, varEstadosParameter);
        }
    
        public virtual ObjectResult<spGastosOperativosXEstado_Result> spGastosOperativosXEstado(Nullable<int> idEmpresa, string varEstados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var varEstadosParameter = varEstados != null ?
                new ObjectParameter("VarEstados", varEstados) :
                new ObjectParameter("VarEstados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGastosOperativosXEstado_Result>("spGastosOperativosXEstado", idEmpresaParameter, varEstadosParameter);
        }
    
        public virtual ObjectResult<SpGastosPersonalGenerado_Result> SpGastosPersonalGenerado(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string concepto)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosPersonalGenerado_Result>("SpGastosPersonalGenerado", idEmpresaParameter, idEmpleadoParameter, conceptoParameter);
        }
    
        public virtual ObjectResult<SpGastosPersonalGeneral_Result> SpGastosPersonalGeneral(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string concepto)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosPersonalGeneral_Result>("SpGastosPersonalGeneral", idEmpresaParameter, idEmpleadoParameter, conceptoParameter);
        }
    
        public virtual ObjectResult<SpGastosPorDepartamento_Result> SpGastosPorDepartamento(Nullable<int> idEmpresa, Nullable<int> idDepartamento, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosPorDepartamento_Result>("SpGastosPorDepartamento", idEmpresaParameter, idDepartamentoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpGastosPorSucursal_Result> SpGastosPorSucursal(Nullable<int> idEmpresa, Nullable<int> idSucursal, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosPorSucursal_Result>("SpGastosPorSucursal", idEmpresaParameter, idSucursalParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpGastosSucursalGeneral_Result> SpGastosSucursalGeneral(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosSucursalGeneral_Result>("SpGastosSucursalGeneral", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpGastosTotalGeneral_Result> SpGastosTotalGeneral(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string concepto)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosTotalGeneral_Result>("SpGastosTotalGeneral", idEmpresaParameter, idEmpleadoParameter, conceptoParameter);
        }
    
        public virtual ObjectResult<SpGastosTotalPersonal_Result> SpGastosTotalPersonal(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGastosTotalPersonal_Result>("SpGastosTotalPersonal", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpGenerarNomina_Result> SpGenerarNomina(string periodo, Nullable<int> idEmpresa)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGenerarNomina_Result>("SpGenerarNomina", periodoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpGenerarNominaDepartamento_Result> SpGenerarNominaDepartamento(Nullable<int> idEmpresa, string periodo, string departamento)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGenerarNominaDepartamento_Result>("SpGenerarNominaDepartamento", idEmpresaParameter, periodoParameter, departamentoParameter);
        }
    
        public virtual ObjectResult<SpGetAlcancePuesto_Result> SpGetAlcancePuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAlcancePuesto_Result>("SpGetAlcancePuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<spgetAnulacionesPrefacturas_Result> spgetAnulacionesPrefacturas(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgetAnulacionesPrefacturas_Result>("spgetAnulacionesPrefacturas", idSucursalParameter);
        }
    
        public virtual ObjectResult<spGetArqueoCaja_Result> spGetArqueoCaja(Nullable<int> idAperturaCaja)
        {
            var idAperturaCajaParameter = idAperturaCaja.HasValue ?
                new ObjectParameter("IdAperturaCaja", idAperturaCaja) :
                new ObjectParameter("IdAperturaCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetArqueoCaja_Result>("spGetArqueoCaja", idAperturaCajaParameter);
        }
    
        public virtual ObjectResult<spGetCajeroParaFactura_Result> spGetCajeroParaFactura(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCajeroParaFactura_Result>("spGetCajeroParaFactura", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SpGetCostosComprasActivasXProducto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SpGetCostosComprasActivasXProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<spgetCotizacionCompra_Result> spgetCotizacionCompra(Nullable<int> idCotizacionVenta)
        {
            var idCotizacionVentaParameter = idCotizacionVenta.HasValue ?
                new ObjectParameter("IdCotizacionVenta", idCotizacionVenta) :
                new ObjectParameter("IdCotizacionVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgetCotizacionCompra_Result>("spgetCotizacionCompra", idCotizacionVentaParameter);
        }
    
        public virtual ObjectResult<SPGetDatosCotizacionVenta_Result> SPGetDatosCotizacionVenta(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetDatosCotizacionVenta_Result>("SPGetDatosCotizacionVenta", idParameter);
        }
    
        public virtual ObjectResult<SpGetDatosFlotaVehicularReciboCaja_Result> SpGetDatosFlotaVehicularReciboCaja(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("idRecibo", idRecibo) :
                new ObjectParameter("idRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDatosFlotaVehicularReciboCaja_Result>("SpGetDatosFlotaVehicularReciboCaja", idReciboParameter);
        }
    
        public virtual ObjectResult<SpGetDatosReciboCajaChica_Result> SpGetDatosReciboCajaChica(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("idRecibo", idRecibo) :
                new ObjectParameter("idRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDatosReciboCajaChica_Result>("SpGetDatosReciboCajaChica", idReciboParameter);
        }
    
        public virtual ObjectResult<string> SpGetDocumentoPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetDocumentoPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetEnfermedadPuesto_Result> SpGetEnfermedadPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEnfermedadPuesto_Result>("SpGetEnfermedadPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<spGetFacturasDeudaActualCliente_Result> spGetFacturasDeudaActualCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFacturasDeudaActualCliente_Result>("spGetFacturasDeudaActualCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<string> SpGetHerramientaPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetHerramientaPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetIndicadorPuesto_Result> SpGetIndicadorPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetIndicadorPuesto_Result>("SpGetIndicadorPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetInfoPuesto_Result> SpGetInfoPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetInfoPuesto_Result>("SpGetInfoPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<spGetLotesParaFacturaPV_Result> spGetLotesParaFacturaPV(Nullable<int> idProducto, Nullable<int> idPrefacturaPV)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idPrefacturaPVParameter = idPrefacturaPV.HasValue ?
                new ObjectParameter("IdPrefacturaPV", idPrefacturaPV) :
                new ObjectParameter("IdPrefacturaPV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetLotesParaFacturaPV_Result>("spGetLotesParaFacturaPV", idProductoParameter, idPrefacturaPVParameter);
        }
    
        public virtual ObjectResult<spGetNotasDebitoDeudaActualCliente_Result> spGetNotasDebitoDeudaActualCliente(Nullable<int> idCliente, string tipo)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNotasDebitoDeudaActualCliente_Result>("spGetNotasDebitoDeudaActualCliente", idClienteParameter, tipoParameter);
        }
    
        public virtual ObjectResult<spGetNotasDebitoXEstado_Result> spGetNotasDebitoXEstado(Nullable<int> idEmpresa, string estados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNotasDebitoXEstado_Result>("spGetNotasDebitoXEstado", idEmpresaParameter, estadosParameter);
        }
    
        public virtual ObjectResult<spGetNotasDebitoXEstadoProveedor_Result> spGetNotasDebitoXEstadoProveedor(Nullable<int> idEmpresa, string estados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNotasDebitoXEstadoProveedor_Result>("spGetNotasDebitoXEstadoProveedor", idEmpresaParameter, estadosParameter);
        }
    
        public virtual ObjectResult<SpGetPrecioProducto_Result> SpGetPrecioProducto(Nullable<int> idProducto, Nullable<int> idSegmento)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("IdSegmento", idSegmento) :
                new ObjectParameter("IdSegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPrecioProducto_Result>("SpGetPrecioProducto", idProductoParameter, idSegmentoParameter);
        }
    
        public virtual ObjectResult<spGetPruebaVehiculoXid_Result> spGetPruebaVehiculoXid(Nullable<int> idPruebaVehiculo)
        {
            var idPruebaVehiculoParameter = idPruebaVehiculo.HasValue ?
                new ObjectParameter("IdPruebaVehiculo", idPruebaVehiculo) :
                new ObjectParameter("IdPruebaVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPruebaVehiculoXid_Result>("spGetPruebaVehiculoXid", idPruebaVehiculoParameter);
        }
    
        public virtual ObjectResult<SpGetPuesto_Result> SpGetPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPuesto_Result>("SpGetPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetRecibosCajaChicaElaboradosXIdEmpleado_Result> SpGetRecibosCajaChicaElaboradosXIdEmpleado(Nullable<int> idempleado, string estado)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRecibosCajaChicaElaboradosXIdEmpleado_Result>("SpGetRecibosCajaChicaElaboradosXIdEmpleado", idempleadoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spgetRecibosEmitidosXEmpresa_Result> spgetRecibosEmitidosXEmpresa(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgetRecibosEmitidosXEmpresa_Result>("spgetRecibosEmitidosXEmpresa", idEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<string> SpGetRequisitoPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetRequisitoPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetReservaCotizacion_Result> SpGetReservaCotizacion(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetReservaCotizacion_Result>("SpGetReservaCotizacion", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpGetRiesgoPuesto_Result> SpGetRiesgoPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRiesgoPuesto_Result>("SpGetRiesgoPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpGetSolicitudesPagoCajaChicaXIdEmpleado_Result> SpGetSolicitudesPagoCajaChicaXIdEmpleado(Nullable<int> idempleado, string estado)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSolicitudesPagoCajaChicaXIdEmpleado_Result>("SpGetSolicitudesPagoCajaChicaXIdEmpleado", idempleadoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SpGetSolicitudesPagoCajaChicaXIdEmpresa_Result> SpGetSolicitudesPagoCajaChicaXIdEmpresa(Nullable<int> idempresa, string estado)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSolicitudesPagoCajaChicaXIdEmpresa_Result>("SpGetSolicitudesPagoCajaChicaXIdEmpresa", idempresaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpleado_Result> SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpleado(Nullable<int> idempleado)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpleado_Result>("SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpleado", idempleadoParameter);
        }
    
        public virtual ObjectResult<SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpresa_Result> SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpresa(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpresa_Result>("SpGetSolicitudPagoCajaChicaEnProcesoXIdEmpresa", idempresaParameter);
        }
    
        public virtual ObjectResult<SpGetSolicitudPgoCajaChicaAprobadasXIdCaja_Result> SpGetSolicitudPgoCajaChicaAprobadasXIdCaja(Nullable<int> idAsignacionCaja)
        {
            var idAsignacionCajaParameter = idAsignacionCaja.HasValue ?
                new ObjectParameter("idAsignacionCaja", idAsignacionCaja) :
                new ObjectParameter("idAsignacionCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSolicitudPgoCajaChicaAprobadasXIdCaja_Result>("SpGetSolicitudPgoCajaChicaAprobadasXIdCaja", idAsignacionCajaParameter);
        }
    
        public virtual ObjectResult<SpGetSucursal_Result> SpGetSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSucursal_Result>("SpGetSucursal", idSucursalParameter);
        }
    
        public virtual ObjectResult<SpGetTareaPuesto_Result> SpGetTareaPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetTareaPuesto_Result>("SpGetTareaPuesto", idPuestoParameter);
        }
    
        public virtual ObjectResult<SpgetTituloReporte_Result> SpgetTituloReporte(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetTituloReporte_Result>("SpgetTituloReporte", idSucursalParameter);
        }
    
        public virtual ObjectResult<SpGetUnidadesProducto_Result> SpGetUnidadesProducto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUnidadesProducto_Result>("SpGetUnidadesProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<SpGetUnidadesProductoXBodega_Result> SpGetUnidadesProductoXBodega(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUnidadesProductoXBodega_Result>("SpGetUnidadesProductoXBodega", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<spIdentificadoresExcluidosXCompra_Result> spIdentificadoresExcluidosXCompra(Nullable<int> idCompra, Nullable<int> idProducto)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIdentificadoresExcluidosXCompra_Result>("spIdentificadoresExcluidosXCompra", idCompraParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<spIdentificadoresExistenteXCompra_Result> spIdentificadoresExistenteXCompra(Nullable<int> idCompra, Nullable<int> idProducto)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spIdentificadoresExistenteXCompra_Result>("spIdentificadoresExistenteXCompra", idCompraParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<SpImprimirMovimientoPersonal_Result> SpImprimirMovimientoPersonal(Nullable<int> idEmpleado, Nullable<int> idEmpleadoPuesto)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idEmpleadoPuestoParameter = idEmpleadoPuesto.HasValue ?
                new ObjectParameter("IdEmpleadoPuesto", idEmpleadoPuesto) :
                new ObjectParameter("IdEmpleadoPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImprimirMovimientoPersonal_Result>("SpImprimirMovimientoPersonal", idEmpleadoParameter, idEmpleadoPuestoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGenerados_Result> SpImpuestosGenerados(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGenerados_Result>("SpImpuestosGenerados", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGenerales_Result> SpImpuestosGenerales(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGenerales_Result>("SpImpuestosGenerales", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGeneralesInatec_Result> SpImpuestosGeneralesInatec(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGeneralesInatec_Result>("SpImpuestosGeneralesInatec", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGeneralesInssLaboral_Result> SpImpuestosGeneralesInssLaboral(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGeneralesInssLaboral_Result>("SpImpuestosGeneralesInssLaboral", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGeneralesInssPatronal_Result> SpImpuestosGeneralesInssPatronal(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGeneralesInssPatronal_Result>("SpImpuestosGeneralesInssPatronal", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpImpuestosGeneralesIR_Result> SpImpuestosGeneralesIR(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpImpuestosGeneralesIR_Result>("SpImpuestosGeneralesIR", idEmpleadoParameter);
        }
    
        public virtual int SPInactivarTodaFlotaSucursal(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInactivarTodaFlotaSucursal", idEmpresaParameter, fechaParameter);
        }
    
        public virtual int SPInactivarTodosConductores(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInactivarTodosConductores", idEmpresaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spListaFlotaVehicularActivas_Result> spListaFlotaVehicularActivas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaFlotaVehicularActivas_Result>("spListaFlotaVehicularActivas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spListaProductosCantidadDefectuosos_Result> spListaProductosCantidadDefectuosos(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaProductosCantidadDefectuosos_Result>("spListaProductosCantidadDefectuosos", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spListaProductosCargadosOrdenProduccion_Result> spListaProductosCargadosOrdenProduccion(Nullable<int> idOrdenProduccion)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaProductosCargadosOrdenProduccion_Result>("spListaProductosCargadosOrdenProduccion", idOrdenProduccionParameter);
        }
    
        public virtual ObjectResult<spListaProductosCargadosOrdenTrabajo_Result> spListaProductosCargadosOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("IdOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("IdOrdenTrabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaProductosCargadosOrdenTrabajo_Result>("spListaProductosCargadosOrdenTrabajo", idOrdenTrabajoParameter);
        }
    
        public virtual ObjectResult<spListaProductosOrdenProduccion_Result> spListaProductosOrdenProduccion(Nullable<int> idOrdenProduccion)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaProductosOrdenProduccion_Result>("spListaProductosOrdenProduccion", idOrdenProduccionParameter);
        }
    
        public virtual ObjectResult<spListaProductosOrdenProduccionSinMalos_Result> spListaProductosOrdenProduccionSinMalos(Nullable<int> idOrdenProduccion)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaProductosOrdenProduccionSinMalos_Result>("spListaProductosOrdenProduccionSinMalos", idOrdenProduccionParameter);
        }
    
        public virtual ObjectResult<spLoteExistenteXCompra_Result> spLoteExistenteXCompra(Nullable<int> idCompra, Nullable<int> idProducto)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoteExistenteXCompra_Result>("spLoteExistenteXCompra", idCompraParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<SpMostarCotizacionMantenimientoxId_Result> SpMostarCotizacionMantenimientoxId(Nullable<int> idCotizacionMantenimiento)
        {
            var idCotizacionMantenimientoParameter = idCotizacionMantenimiento.HasValue ?
                new ObjectParameter("IdCotizacionMantenimiento", idCotizacionMantenimiento) :
                new ObjectParameter("IdCotizacionMantenimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostarCotizacionMantenimientoxId_Result>("SpMostarCotizacionMantenimientoxId", idCotizacionMantenimientoParameter);
        }
    
        public virtual ObjectResult<SpMostrarAccesoriosGeneralFlota_Result> SpMostrarAccesoriosGeneralFlota(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarAccesoriosGeneralFlota_Result>("SpMostrarAccesoriosGeneralFlota", idempresaParameter);
        }
    
        public virtual ObjectResult<spMostrarAperturaDia_CierreDiaXIdSucursal_MinutaDeposito_Result> spMostrarAperturaDia_CierreDiaXIdSucursal_MinutaDeposito(Nullable<int> idSucursal, Nullable<System.DateTime> fechaCierre, Nullable<int> idCierreDia)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("fechaCierre", fechaCierre) :
                new ObjectParameter("fechaCierre", typeof(System.DateTime));
    
            var idCierreDiaParameter = idCierreDia.HasValue ?
                new ObjectParameter("idCierreDia", idCierreDia) :
                new ObjectParameter("idCierreDia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarAperturaDia_CierreDiaXIdSucursal_MinutaDeposito_Result>("spMostrarAperturaDia_CierreDiaXIdSucursal_MinutaDeposito", idSucursalParameter, fechaCierreParameter, idCierreDiaParameter);
        }
    
        public virtual ObjectResult<spMostrarAperturaDiaXIdSucursal_FechaCierre_MinutaDeposito_Result> spMostrarAperturaDiaXIdSucursal_FechaCierre_MinutaDeposito(Nullable<int> idSucursal, Nullable<System.DateTime> fechaCierre)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("fechaCierre", fechaCierre) :
                new ObjectParameter("fechaCierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarAperturaDiaXIdSucursal_FechaCierre_MinutaDeposito_Result>("spMostrarAperturaDiaXIdSucursal_FechaCierre_MinutaDeposito", idSucursalParameter, fechaCierreParameter);
        }
    
        public virtual ObjectResult<SpMostrarCierreDiaXIdSucursal_MinutaDeposito_Result> SpMostrarCierreDiaXIdSucursal_MinutaDeposito(Nullable<int> idSucursal, Nullable<int> idAperturaDia)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var idAperturaDiaParameter = idAperturaDia.HasValue ?
                new ObjectParameter("IdAperturaDia", idAperturaDia) :
                new ObjectParameter("IdAperturaDia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarCierreDiaXIdSucursal_MinutaDeposito_Result>("SpMostrarCierreDiaXIdSucursal_MinutaDeposito", idSucursalParameter, idAperturaDiaParameter);
        }
    
        public virtual ObjectResult<SpMostrarConductor_Result> SpMostrarConductor(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarConductor_Result>("SpMostrarConductor", idParameter);
        }
    
        public virtual ObjectResult<spMostrarCotizacionesRevisadasPV_Result> spMostrarCotizacionesRevisadasPV(Nullable<int> idEmpresa, string fechaInicio, string fechaFin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarCotizacionesRevisadasPV_Result>("spMostrarCotizacionesRevisadasPV", idEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<spMostrarCuentasBancariasXIdBanco_Result> spMostrarCuentasBancariasXIdBanco(Nullable<int> idBanco)
        {
            var idBancoParameter = idBanco.HasValue ?
                new ObjectParameter("idBanco", idBanco) :
                new ObjectParameter("idBanco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarCuentasBancariasXIdBanco_Result>("spMostrarCuentasBancariasXIdBanco", idBancoParameter);
        }
    
        public virtual ObjectResult<spMostrarCuentasBancariasXIdBancoXTtitular_Result> spMostrarCuentasBancariasXIdBancoXTtitular(Nullable<int> idBanco, string tipotitular)
        {
            var idBancoParameter = idBanco.HasValue ?
                new ObjectParameter("idBanco", idBanco) :
                new ObjectParameter("idBanco", typeof(int));
    
            var tipotitularParameter = tipotitular != null ?
                new ObjectParameter("tipotitular", tipotitular) :
                new ObjectParameter("tipotitular", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarCuentasBancariasXIdBancoXTtitular_Result>("spMostrarCuentasBancariasXIdBancoXTtitular", idBancoParameter, tipotitularParameter);
        }
    
        public virtual ObjectResult<spMostrarDatosChequeReporte_Result> spMostrarDatosChequeReporte(Nullable<int> idPagoRealizadoTesoreria, Nullable<int> idSolicitud)
        {
            var idPagoRealizadoTesoreriaParameter = idPagoRealizadoTesoreria.HasValue ?
                new ObjectParameter("IdPagoRealizadoTesoreria", idPagoRealizadoTesoreria) :
                new ObjectParameter("IdPagoRealizadoTesoreria", typeof(int));
    
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDatosChequeReporte_Result>("spMostrarDatosChequeReporte", idPagoRealizadoTesoreriaParameter, idSolicitudParameter);
        }
    
        public virtual ObjectResult<SpMostrarDeduccionAlimentos_Result> SpMostrarDeduccionAlimentos(Nullable<int> idEmpleado, string periodo)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarDeduccionAlimentos_Result>("SpMostrarDeduccionAlimentos", idEmpleadoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpMostrarDepartamentos_Result> SpMostrarDepartamentos(Nullable<int> id_empresa)
        {
            var id_empresaParameter = id_empresa.HasValue ?
                new ObjectParameter("id_empresa", id_empresa) :
                new ObjectParameter("id_empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarDepartamentos_Result>("SpMostrarDepartamentos", id_empresaParameter);
        }
    
        public virtual ObjectResult<SpMostrarDetalleCotizacionMantenimientoXId_Result> SpMostrarDetalleCotizacionMantenimientoXId(Nullable<int> idCotizacionMantenimiento)
        {
            var idCotizacionMantenimientoParameter = idCotizacionMantenimiento.HasValue ?
                new ObjectParameter("IdCotizacionMantenimiento", idCotizacionMantenimiento) :
                new ObjectParameter("IdCotizacionMantenimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarDetalleCotizacionMantenimientoXId_Result>("SpMostrarDetalleCotizacionMantenimientoXId", idCotizacionMantenimientoParameter);
        }
    
        public virtual ObjectResult<spMostrarDetalleDevolucionFacturaParcialXCliente_Result> spMostrarDetalleDevolucionFacturaParcialXCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDetalleDevolucionFacturaParcialXCliente_Result>("spMostrarDetalleDevolucionFacturaParcialXCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<spMostrarDetalleDevolucionFacturasAnuladasXCliente_Result> spMostrarDetalleDevolucionFacturasAnuladasXCliente(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDetalleDevolucionFacturasAnuladasXCliente_Result>("spMostrarDetalleDevolucionFacturasAnuladasXCliente", idclienteParameter);
        }
    
        public virtual ObjectResult<spMostrarDetalleFacturasClientexId_Result> spMostrarDetalleFacturasClientexId(Nullable<int> idCliente, Nullable<int> idSolicitud)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDetalleFacturasClientexId_Result>("spMostrarDetalleFacturasClientexId", idClienteParameter, idSolicitudParameter);
        }
    
        public virtual ObjectResult<spMostrarDetalleFacturasClienteXId_NoSolicitada_Result> spMostrarDetalleFacturasClienteXId_NoSolicitada(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDetalleFacturasClienteXId_NoSolicitada_Result>("spMostrarDetalleFacturasClienteXId_NoSolicitada", idClienteParameter);
        }
    
        public virtual int SpMostrarDiasTrabajados(Nullable<int> idEmpleado, string periodo, ObjectParameter dias_laborados)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpMostrarDiasTrabajados", idEmpleadoParameter, periodoParameter, dias_laborados);
        }
    
        public virtual ObjectResult<SpMostrarEmpleado_Result> SpMostrarEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarEmpleado_Result>("SpMostrarEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpMostrarEmpleadosPorEmpresa_Result> SpMostrarEmpleadosPorEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarEmpleadosPorEmpresa_Result>("SpMostrarEmpleadosPorEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMostrarEmpresa_Result> SpMostrarEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarEmpresa_Result>("SpMostrarEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spMostrarFacturasContado_Proveedor_Result> spMostrarFacturasContado_Proveedor(Nullable<int> idempresa, Nullable<int> idProveedor)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarFacturasContado_Proveedor_Result>("spMostrarFacturasContado_Proveedor", idempresaParameter, idProveedorParameter);
        }
    
        public virtual ObjectResult<spMostrarFacturasGlobalXIdCliente_Result> spMostrarFacturasGlobalXIdCliente(Nullable<int> idCliente, string fechaInicio, string fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarFacturasGlobalXIdCliente_Result>("spMostrarFacturasGlobalXIdCliente", idClienteParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<spMostrarFacturasGlobalXIdCliente_NotaCredito_Result> spMostrarFacturasGlobalXIdCliente_NotaCredito(Nullable<int> idCliente, string fechaInicio, string fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarFacturasGlobalXIdCliente_NotaCredito_Result>("spMostrarFacturasGlobalXIdCliente_NotaCredito", idClienteParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<spMostrarFacturasSLCheque_Result> spMostrarFacturasSLCheque(Nullable<int> id_proveedor, Nullable<int> idEmpresa)
        {
            var id_proveedorParameter = id_proveedor.HasValue ?
                new ObjectParameter("id_proveedor", id_proveedor) :
                new ObjectParameter("id_proveedor", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarFacturasSLCheque_Result>("spMostrarFacturasSLCheque", id_proveedorParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMostrarListaConductor_Result> SpMostrarListaConductor(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarListaConductor_Result>("SpMostrarListaConductor", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMostrarNominaEmpleado_Result> SpMostrarNominaEmpleado(Nullable<int> idEmpleado, string periodo)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarNominaEmpleado_Result>("SpMostrarNominaEmpleado", idEmpleadoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<spMostrarNotificacionesCreadasxIdRemitente_Result> spMostrarNotificacionesCreadasxIdRemitente(Nullable<int> idRemitente)
        {
            var idRemitenteParameter = idRemitente.HasValue ?
                new ObjectParameter("IdRemitente", idRemitente) :
                new ObjectParameter("IdRemitente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarNotificacionesCreadasxIdRemitente_Result>("spMostrarNotificacionesCreadasxIdRemitente", idRemitenteParameter);
        }
    
        public virtual ObjectResult<SpMostrarOtrasDeducciones_Result> SpMostrarOtrasDeducciones(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarOtrasDeducciones_Result>("SpMostrarOtrasDeducciones", idEmpresaParameter, idEmpleadoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpMostrarOtrosIngresos_Result> SpMostrarOtrosIngresos(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarOtrosIngresos_Result>("SpMostrarOtrosIngresos", idEmpresaParameter, idEmpleadoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpMostrarOtrosIngresosSinRetencion_Result> SpMostrarOtrosIngresosSinRetencion(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarOtrosIngresosSinRetencion_Result>("SpMostrarOtrosIngresosSinRetencion", idEmpresaParameter, idEmpleadoParameter, periodoParameter);
        }
    
        public virtual int SpMostrarPermisoCuentaSalario(Nullable<int> idEmpleado, string periodo)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpMostrarPermisoCuentaSalario", idEmpleadoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpMostrarPuesto_Result> SpMostrarPuesto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarPuesto_Result>("SpMostrarPuesto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMostrarUsuario_Result> SpMostrarUsuario(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMostrarUsuario_Result>("SpMostrarUsuario", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMovimientoConfirmado_Result> SpMovimientoConfirmado(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMovimientoConfirmado_Result>("SpMovimientoConfirmado", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMovimientoDenegado_Result> SpMovimientoDenegado(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMovimientoDenegado_Result>("SpMovimientoDenegado", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpMovimientoEmpleado_Result> SpMovimientoEmpleado(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpMovimientoEmpleado_Result>("SpMovimientoEmpleado", idEmpresaParameter);
        }
    
        public virtual ObjectResult<string> SpNombreCajaGeneral(Nullable<int> idCaja)
        {
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpNombreCajaGeneral", idCajaParameter);
        }
    
        public virtual ObjectResult<string> SpNombreCompletoEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpNombreCompletoEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<spNotasCreditoDebitoxIdCliente_Result> spNotasCreditoDebitoxIdCliente(Nullable<int> idBeneficiario, string tipoNota, string tipoBeneficiario, string idFactura, string moneda, Nullable<decimal> tasa)
        {
            var idBeneficiarioParameter = idBeneficiario.HasValue ?
                new ObjectParameter("IdBeneficiario", idBeneficiario) :
                new ObjectParameter("IdBeneficiario", typeof(int));
    
            var tipoNotaParameter = tipoNota != null ?
                new ObjectParameter("TipoNota", tipoNota) :
                new ObjectParameter("TipoNota", typeof(string));
    
            var tipoBeneficiarioParameter = tipoBeneficiario != null ?
                new ObjectParameter("TipoBeneficiario", tipoBeneficiario) :
                new ObjectParameter("TipoBeneficiario", typeof(string));
    
            var idFacturaParameter = idFactura != null ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("Tasa", tasa) :
                new ObjectParameter("Tasa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNotasCreditoDebitoxIdCliente_Result>("spNotasCreditoDebitoxIdCliente", idBeneficiarioParameter, tipoNotaParameter, tipoBeneficiarioParameter, idFacturaParameter, monedaParameter, tasaParameter);
        }
    
        public virtual ObjectResult<spObtenerCostosHorasEstacionXOrden_Result> spObtenerCostosHorasEstacionXOrden(Nullable<int> idOrdenProduccion)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerCostosHorasEstacionXOrden_Result>("spObtenerCostosHorasEstacionXOrden", idOrdenProduccionParameter);
        }
    
        public virtual int SpObtenerFechaPeriodo(string periodo, ObjectParameter fecha1, ObjectParameter fecha2)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpObtenerFechaPeriodo", periodoParameter, fecha1, fecha2);
        }
    
        public virtual ObjectResult<SpObtenerFlotaAsignada_Result> SpObtenerFlotaAsignada(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpObtenerFlotaAsignada_Result>("SpObtenerFlotaAsignada", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpObtenerPeriodos_Result> SpObtenerPeriodos(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpObtenerPeriodos_Result>("SpObtenerPeriodos", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spObtenerPrefacturasEmitidas_Result> spObtenerPrefacturasEmitidas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerPrefacturasEmitidas_Result>("spObtenerPrefacturasEmitidas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spObtenerPrefacturasEmitidasCredito_Result> spObtenerPrefacturasEmitidasCredito(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerPrefacturasEmitidasCredito_Result>("spObtenerPrefacturasEmitidasCredito", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spObtenerProductosParaImportacion_Result> spObtenerProductosParaImportacion(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerProductosParaImportacion_Result>("spObtenerProductosParaImportacion", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spOrdenesProduccionXEstado_Result> spOrdenesProduccionXEstado(string varEstados, Nullable<int> idEmpresa)
        {
            var varEstadosParameter = varEstados != null ?
                new ObjectParameter("varEstados", varEstados) :
                new ObjectParameter("varEstados", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOrdenesProduccionXEstado_Result>("spOrdenesProduccionXEstado", varEstadosParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpOrdenesTrabajoTecnicoServicios_Result> SpOrdenesTrabajoTecnicoServicios(Nullable<int> idOT)
        {
            var idOTParameter = idOT.HasValue ?
                new ObjectParameter("IdOT", idOT) :
                new ObjectParameter("IdOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpOrdenesTrabajoTecnicoServicios_Result>("SpOrdenesTrabajoTecnicoServicios", idOTParameter);
        }
    
        public virtual ObjectResult<SpOrdenesTrabajoXEmpresaXEstados_Result> SpOrdenesTrabajoXEmpresaXEstados(Nullable<int> idEmpresa, string varEstados)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var varEstadosParameter = varEstados != null ?
                new ObjectParameter("VarEstados", varEstados) :
                new ObjectParameter("VarEstados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpOrdenesTrabajoXEmpresaXEstados_Result>("SpOrdenesTrabajoXEmpresaXEstados", idEmpresaParameter, varEstadosParameter);
        }
    
        public virtual ObjectResult<SpOrdenTrabajoTerminadoXEmpresa_Result> SpOrdenTrabajoTerminadoXEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpOrdenTrabajoTerminadoXEmpresa_Result>("SpOrdenTrabajoTerminadoXEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpOrdenTrabajoTerminadoXEmpresaSinAsignacion_Result> SpOrdenTrabajoTerminadoXEmpresaSinAsignacion(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpOrdenTrabajoTerminadoXEmpresaSinAsignacion_Result>("SpOrdenTrabajoTerminadoXEmpresaSinAsignacion", idEmpresaParameter);
        }
    
        public virtual int SpOtrasDeducciones(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter otrasDeducciones)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpOtrasDeducciones", idEmpresaParameter, idEmpleadoParameter, periodoParameter, otrasDeducciones);
        }
    
        public virtual int SpOtrosIngresos(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter otrosIngresos)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpOtrosIngresos", idEmpresaParameter, idEmpleadoParameter, periodoParameter, otrosIngresos);
        }
    
        public virtual int SpOtrosIngresosInterno(Nullable<int> idEmpresa, Nullable<int> idEmpleado, string periodo, ObjectParameter otrosIngresos)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpOtrosIngresosInterno", idEmpresaParameter, idEmpleadoParameter, periodoParameter, otrosIngresos);
        }
    
        public virtual ObjectResult<SpPermisosXCuenta_Result> SpPermisosXCuenta(Nullable<int> idCuenta, Nullable<int> idEmpresa)
        {
            var idCuentaParameter = idCuenta.HasValue ?
                new ObjectParameter("IdCuenta", idCuenta) :
                new ObjectParameter("IdCuenta", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPermisosXCuenta_Result>("SpPermisosXCuenta", idCuentaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpPrefacturasOTXEmpresaXEstado_Result> SpPrefacturasOTXEmpresaXEstado(Nullable<int> idempresa, string estado)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPrefacturasOTXEmpresaXEstado_Result>("SpPrefacturasOTXEmpresaXEstado", idempresaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spProductosCompraInternacional_Result> spProductosCompraInternacional(string listVar)
        {
            var listVarParameter = listVar != null ?
                new ObjectParameter("ListVar", listVar) :
                new ObjectParameter("ListVar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductosCompraInternacional_Result>("spProductosCompraInternacional", listVarParameter);
        }
    
        public virtual ObjectResult<spProductosMalosOrdenProduccion_Result> spProductosMalosOrdenProduccion(Nullable<int> idOrdenProduccion)
        {
            var idOrdenProduccionParameter = idOrdenProduccion.HasValue ?
                new ObjectParameter("IdOrdenProduccion", idOrdenProduccion) :
                new ObjectParameter("IdOrdenProduccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductosMalosOrdenProduccion_Result>("spProductosMalosOrdenProduccion", idOrdenProduccionParameter);
        }
    
        public virtual ObjectResult<SpProductosOrdenTrabajo_Result> SpProductosOrdenTrabajo(Nullable<int> idOT, Nullable<int> idSegmento)
        {
            var idOTParameter = idOT.HasValue ?
                new ObjectParameter("idOT", idOT) :
                new ObjectParameter("idOT", typeof(int));
    
            var idSegmentoParameter = idSegmento.HasValue ?
                new ObjectParameter("idSegmento", idSegmento) :
                new ObjectParameter("idSegmento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProductosOrdenTrabajo_Result>("SpProductosOrdenTrabajo", idOTParameter, idSegmentoParameter);
        }
    
        public virtual ObjectResult<spRecibosCajaGeneral_Result> spRecibosCajaGeneral(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRecibosCajaGeneral_Result>("spRecibosCajaGeneral", idSucursalParameter);
        }
    
        public virtual ObjectResult<spRecibosCajaGeneralAnulados_Result> spRecibosCajaGeneralAnulados(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRecibosCajaGeneralAnulados_Result>("spRecibosCajaGeneralAnulados", idSucursalParameter);
        }
    
        public virtual ObjectResult<spReimprimirAperturaCaja_Result> spReimprimirAperturaCaja(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReimprimirAperturaCaja_Result>("spReimprimirAperturaCaja", idSucursalParameter);
        }
    
        public virtual ObjectResult<SpReporteAnulacionComprasXEmpresa_Result> SpReporteAnulacionComprasXEmpresa(Nullable<int> idempresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteAnulacionComprasXEmpresa_Result>("SpReporteAnulacionComprasXEmpresa", idempresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteAnulacionFactura_Result> SpReporteAnulacionFactura(Nullable<int> idfactura)
        {
            var idfacturaParameter = idfactura.HasValue ?
                new ObjectParameter("idfactura", idfactura) :
                new ObjectParameter("idfactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteAnulacionFactura_Result>("SpReporteAnulacionFactura", idfacturaParameter);
        }
    
        public virtual ObjectResult<SpReporteAnulacionFacturasXEmpresa_Result> SpReporteAnulacionFacturasXEmpresa(Nullable<int> idempresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteAnulacionFacturasXEmpresa_Result>("SpReporteAnulacionFacturasXEmpresa", idempresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteCierreCaja_Result> SpReporteCierreCaja(Nullable<int> idCaj, Nullable<int> idAperturaCaja)
        {
            var idCajParameter = idCaj.HasValue ?
                new ObjectParameter("IdCaj", idCaj) :
                new ObjectParameter("IdCaj", typeof(int));
    
            var idAperturaCajaParameter = idAperturaCaja.HasValue ?
                new ObjectParameter("IdAperturaCaja", idAperturaCaja) :
                new ObjectParameter("IdAperturaCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteCierreCaja_Result>("SpReporteCierreCaja", idCajParameter, idAperturaCajaParameter);
        }
    
        public virtual ObjectResult<SpReporteComprasConIVA_Result> SpReporteComprasConIVA(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteComprasConIVA_Result>("SpReporteComprasConIVA", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteConsolidadoGastoCajaChica_Result> SpReporteConsolidadoGastoCajaChica(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteConsolidadoGastoCajaChica_Result>("SpReporteConsolidadoGastoCajaChica", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteDetalleDevolucionFactura_Result> SpReporteDetalleDevolucionFactura(Nullable<int> iddevolucion)
        {
            var iddevolucionParameter = iddevolucion.HasValue ?
                new ObjectParameter("iddevolucion", iddevolucion) :
                new ObjectParameter("iddevolucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDetalleDevolucionFactura_Result>("SpReporteDetalleDevolucionFactura", iddevolucionParameter);
        }
    
        public virtual ObjectResult<SpReporteDetalleGastoCajaChica_Result> SpReporteDetalleGastoCajaChica(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDetalleGastoCajaChica_Result>("SpReporteDetalleGastoCajaChica", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteDetalleIngresoCompra_Result> SpReporteDetalleIngresoCompra(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDetalleIngresoCompra_Result>("SpReporteDetalleIngresoCompra", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteDevolcionesXEmpresa_Result> SpReporteDevolcionesXEmpresa(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDevolcionesXEmpresa_Result>("SpReporteDevolcionesXEmpresa", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteDevolucionComprasXEmpresa_Result> SpReporteDevolucionComprasXEmpresa(Nullable<int> idempresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDevolucionComprasXEmpresa_Result>("SpReporteDevolucionComprasXEmpresa", idempresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteDevolucionFactura_Result> SpReporteDevolucionFactura(Nullable<int> iddevolucion)
        {
            var iddevolucionParameter = iddevolucion.HasValue ?
                new ObjectParameter("iddevolucion", iddevolucion) :
                new ObjectParameter("iddevolucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteDevolucionFactura_Result>("SpReporteDevolucionFactura", iddevolucionParameter);
        }
    
        public virtual ObjectResult<SpReporteGeneralVentasDolares_Result> SpReporteGeneralVentasDolares(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, Nullable<bool> cambio)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            var cambioParameter = cambio.HasValue ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteGeneralVentasDolares_Result>("SpReporteGeneralVentasDolares", idEmpresaParameter, fecha1Parameter, fecha2Parameter, cambioParameter);
        }
    
        public virtual ObjectResult<spReporteOrdenSalida_Result> spReporteOrdenSalida(Nullable<int> idOrdenTrabajo, Nullable<int> idEmpresa)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("IdOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("IdOrdenTrabajo", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReporteOrdenSalida_Result>("spReporteOrdenSalida", idOrdenTrabajoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<spReportePaseCredito_Result> spReportePaseCredito(Nullable<int> idEmpresas, Nullable<System.DateTime> fechaIncial, Nullable<System.DateTime> fechaFinal)
        {
            var idEmpresasParameter = idEmpresas.HasValue ?
                new ObjectParameter("IdEmpresas", idEmpresas) :
                new ObjectParameter("IdEmpresas", typeof(int));
    
            var fechaIncialParameter = fechaIncial.HasValue ?
                new ObjectParameter("FechaIncial", fechaIncial) :
                new ObjectParameter("FechaIncial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportePaseCredito_Result>("spReportePaseCredito", idEmpresasParameter, fechaIncialParameter, fechaFinalParameter);
        }
    
        public virtual ObjectResult<SpReportePreFacturasInternasXFecha_Result> SpReportePreFacturasInternasXFecha(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReportePreFacturasInternasXFecha_Result>("SpReportePreFacturasInternasXFecha", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteProduccionXEmpresaXFechas_Result> SpReporteProduccionXEmpresaXFechas(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteProduccionXEmpresaXFechas_Result>("SpReporteProduccionXEmpresaXFechas", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteProduccionXMecanicoXFechas_Result> SpReporteProduccionXMecanicoXFechas(Nullable<int> idmecanico, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idmecanicoParameter = idmecanico.HasValue ?
                new ObjectParameter("idmecanico", idmecanico) :
                new ObjectParameter("idmecanico", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteProduccionXMecanicoXFechas_Result>("SpReporteProduccionXMecanicoXFechas", idmecanicoParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteTotalDevolucionFactura_Result> SpReporteTotalDevolucionFactura(Nullable<int> iddevolucion)
        {
            var iddevolucionParameter = iddevolucion.HasValue ?
                new ObjectParameter("iddevolucion", iddevolucion) :
                new ObjectParameter("iddevolucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteTotalDevolucionFactura_Result>("SpReporteTotalDevolucionFactura", iddevolucionParameter);
        }
    
        public virtual ObjectResult<SpReporteVentasConIVA_Result> SpReporteVentasConIVA(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasConIVA_Result>("SpReporteVentasConIVA", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteVentasFacturasExoneradasXEmpresa_Result> SpReporteVentasFacturasExoneradasXEmpresa(Nullable<int> idEmpresa, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasFacturasExoneradasXEmpresa_Result>("SpReporteVentasFacturasExoneradasXEmpresa", idEmpresaParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<SpReporteVentasXDetalleXEmpresa_Result> SpReporteVentasXDetalleXEmpresa(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasXDetalleXEmpresa_Result>("SpReporteVentasXDetalleXEmpresa", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteVentasXSegmento_Result> SpReporteVentasXSegmento(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasXSegmento_Result>("SpReporteVentasXSegmento", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteVentasXSucursal_Result> SpReporteVentasXSucursal(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasXSucursal_Result>("SpReporteVentasXSucursal", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpReporteVentasXSucursalXSegmento_Result> SpReporteVentasXSucursalXSegmento(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteVentasXSucursalXSegmento_Result>("SpReporteVentasXSucursalXSegmento", idEmpresaParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SpRevertirAprobado_Result> SpRevertirAprobado(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRevertirAprobado_Result>("SpRevertirAprobado", idPedidoParameter);
        }
    
        public virtual ObjectResult<SpRevertirDenegado_Result> SpRevertirDenegado(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRevertirDenegado_Result>("SpRevertirDenegado", idPedidoParameter);
        }
    
        public virtual ObjectResult<spRutasXSemana_Result> spRutasXSemana(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRutasXSemana_Result>("spRutasXSemana", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpServiciosMargenes_Result> SpServiciosMargenes(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpServiciosMargenes_Result>("SpServiciosMargenes", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpServiciosOrdenTrabajo_Result> SpServiciosOrdenTrabajo(Nullable<int> idOT)
        {
            var idOTParameter = idOT.HasValue ?
                new ObjectParameter("IdOT", idOT) :
                new ObjectParameter("IdOT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpServiciosOrdenTrabajo_Result>("SpServiciosOrdenTrabajo", idOTParameter);
        }
    
        public virtual ObjectResult<SpTotalDetalleFacturaPV_Result> SpTotalDetalleFacturaPV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalDetalleFacturaPV_Result>("SpTotalDetalleFacturaPV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SpTotalDeudaClienteCredito(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SpTotalDeudaClienteCredito", idClienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SpTotalDeudaClienteCreditoCordoba(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SpTotalDeudaClienteCreditoCordoba", idClienteParameter);
        }
    
        public virtual ObjectResult<SpTotalDeudaClienteCreditoReporteCordoba_Result> SpTotalDeudaClienteCreditoReporteCordoba(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalDeudaClienteCreditoReporteCordoba_Result>("SpTotalDeudaClienteCreditoReporteCordoba", idClienteParameter);
        }
    
        public virtual ObjectResult<SpTotalDeudaClienteCreditoReporteDolar_Result> SpTotalDeudaClienteCreditoReporteDolar(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalDeudaClienteCreditoReporteDolar_Result>("SpTotalDeudaClienteCreditoReporteDolar", idClienteParameter);
        }
    
        public virtual ObjectResult<SpTotalDeudaXCliente_Result> SpTotalDeudaXCliente(Nullable<int> idcliente, Nullable<int> idEmpresa, string moneda)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalDeudaXCliente_Result>("SpTotalDeudaXCliente", idclienteParameter, idEmpresaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<SpTotalGastosGenerados_Result> SpTotalGastosGenerados(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalGastosGenerados_Result>("SpTotalGastosGenerados", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpTotalGastosGeneral_Result> SpTotalGastosGeneral(Nullable<int> idEmpresa, string periodo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalGastosGeneral_Result>("SpTotalGastosGeneral", idEmpresaParameter, periodoParameter);
        }
    
        public virtual ObjectResult<SpTotalOtrasDeducciones_Result> SpTotalOtrasDeducciones(Nullable<int> idEmpleado, Nullable<int> idEmpresa)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalOtrasDeducciones_Result>("SpTotalOtrasDeducciones", idEmpleadoParameter, idEmpresaParameter);
        }
    
        public virtual int SpTotalOtrasDeduccionesXIdEmpleado(Nullable<int> idempleado, Nullable<int> idempresa, ObjectParameter deuda)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpTotalOtrasDeduccionesXIdEmpleado", idempleadoParameter, idempresaParameter, deuda);
        }
    
        public virtual ObjectResult<SpTotalOtrosIngresos_Result> SpTotalOtrosIngresos(Nullable<int> idEmpleado, Nullable<int> idEmpresa)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalOtrosIngresos_Result>("SpTotalOtrosIngresos", idEmpleadoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpTotalReciboCajaChica_Result> SpTotalReciboCajaChica(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("idRecibo", idRecibo) :
                new ObjectParameter("idRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalReciboCajaChica_Result>("SpTotalReciboCajaChica", idReciboParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spTotalReciboConRetenciones(Nullable<int> idRecibo)
        {
            var idReciboParameter = idRecibo.HasValue ?
                new ObjectParameter("IdRecibo", idRecibo) :
                new ObjectParameter("IdRecibo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spTotalReciboConRetenciones", idReciboParameter);
        }
    
        public virtual ObjectResult<SpTotalSubsidios_Result> SpTotalSubsidios(Nullable<int> idEmpleado, Nullable<int> idEmpresa)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTotalSubsidios_Result>("SpTotalSubsidios", idEmpleadoParameter, idEmpresaParameter);
        }
    
        public virtual int SpValidarAplicacionDeducciones(string periodo)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpValidarAplicacionDeducciones", periodoParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SpValidarPeriodoPrueba(Nullable<int> idEmpleadoPuesto)
        {
            var idEmpleadoPuestoParameter = idEmpleadoPuesto.HasValue ?
                new ObjectParameter("IdEmpleadoPuesto", idEmpleadoPuesto) :
                new ObjectParameter("IdEmpleadoPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SpValidarPeriodoPrueba", idEmpleadoPuestoParameter);
        }
    
        public virtual ObjectResult<SpValidarPermisoexistente_Result> SpValidarPermisoexistente(Nullable<int> id_Tipocuenta, Nullable<int> id_Permiso)
        {
            var id_TipocuentaParameter = id_Tipocuenta.HasValue ?
                new ObjectParameter("id_Tipocuenta", id_Tipocuenta) :
                new ObjectParameter("id_Tipocuenta", typeof(int));
    
            var id_PermisoParameter = id_Permiso.HasValue ?
                new ObjectParameter("id_Permiso", id_Permiso) :
                new ObjectParameter("id_Permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpValidarPermisoexistente_Result>("SpValidarPermisoexistente", id_TipocuentaParameter, id_PermisoParameter);
        }
    
        public virtual int SpValidarRangoPeriodo(Nullable<int> idEmpresa, string periodoInicio, string periodoFinal, string periodo, ObjectParameter @out)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var periodoInicioParameter = periodoInicio != null ?
                new ObjectParameter("PeriodoInicio", periodoInicio) :
                new ObjectParameter("PeriodoInicio", typeof(string));
    
            var periodoFinalParameter = periodoFinal != null ?
                new ObjectParameter("PeriodoFinal", periodoFinal) :
                new ObjectParameter("PeriodoFinal", typeof(string));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpValidarRangoPeriodo", idEmpresaParameter, periodoInicioParameter, periodoFinalParameter, periodoParameter, @out);
        }
    
        public virtual ObjectResult<SpVistaDetalleCombo_Result> SpVistaDetalleCombo(Nullable<int> idCombo)
        {
            var idComboParameter = idCombo.HasValue ?
                new ObjectParameter("IdCombo", idCombo) :
                new ObjectParameter("IdCombo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaDetalleCombo_Result>("SpVistaDetalleCombo", idComboParameter);
        }
    
        public virtual ObjectResult<SpVistaDetalleCotizacionPV_Result> SpVistaDetalleCotizacionPV(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaDetalleCotizacionPV_Result>("SpVistaDetalleCotizacionPV", idCotizacionParameter);
        }
    
        public virtual ObjectResult<SpVistaDetalleCotizacionV_Result> SpVistaDetalleCotizacionV(Nullable<int> idCotizacion)
        {
            var idCotizacionParameter = idCotizacion.HasValue ?
                new ObjectParameter("IdCotizacion", idCotizacion) :
                new ObjectParameter("IdCotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaDetalleCotizacionV_Result>("SpVistaDetalleCotizacionV", idCotizacionParameter);
        }
    
        public virtual ObjectResult<SpVistaDetallePrefacturaV_Result> SpVistaDetallePrefacturaV(Nullable<int> idPrefactura)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaDetallePrefacturaV_Result>("SpVistaDetallePrefacturaV", idPrefacturaParameter);
        }
    
        public virtual ObjectResult<SpVistaDetalleTraslado_Result> SpVistaDetalleTraslado(Nullable<int> idTraslado)
        {
            var idTrasladoParameter = idTraslado.HasValue ?
                new ObjectParameter("IdTraslado", idTraslado) :
                new ObjectParameter("IdTraslado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaDetalleTraslado_Result>("SpVistaDetalleTraslado", idTrasladoParameter);
        }
    
        public virtual ObjectResult<spVistaDevolucionCompra_Result> spVistaDevolucionCompra(Nullable<int> idDevolucion)
        {
            var idDevolucionParameter = idDevolucion.HasValue ?
                new ObjectParameter("IdDevolucion", idDevolucion) :
                new ObjectParameter("IdDevolucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVistaDevolucionCompra_Result>("spVistaDevolucionCompra", idDevolucionParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasCliente_GlobalesXId_Estado_Result> SpVistaFacturasCliente_GlobalesXId_Estado(Nullable<int> idCliente, string estadoProc)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoProcParameter = estadoProc != null ?
                new ObjectParameter("EstadoProc", estadoProc) :
                new ObjectParameter("EstadoProc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasCliente_GlobalesXId_Estado_Result>("SpVistaFacturasCliente_GlobalesXId_Estado", idClienteParameter, estadoProcParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasCreditoAbonadas_Result> SpVistaFacturasCreditoAbonadas(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasCreditoAbonadas_Result>("SpVistaFacturasCreditoAbonadas", idClienteParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasCreditoXClienteReporteCordoba_Result> SpVistaFacturasCreditoXClienteReporteCordoba(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasCreditoXClienteReporteCordoba_Result>("SpVistaFacturasCreditoXClienteReporteCordoba", idClienteParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasCreditoXClienteReporteDolar_Result> SpVistaFacturasCreditoXClienteReporteDolar(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasCreditoXClienteReporteDolar_Result>("SpVistaFacturasCreditoXClienteReporteDolar", idClienteParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasCreditoXEstado_Result> SpVistaFacturasCreditoXEstado(Nullable<int> idCliente, string estadoFactura)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoFacturaParameter = estadoFactura != null ?
                new ObjectParameter("estadoFactura", estadoFactura) :
                new ObjectParameter("estadoFactura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasCreditoXEstado_Result>("SpVistaFacturasCreditoXEstado", idClienteParameter, estadoFacturaParameter);
        }
    
        public virtual ObjectResult<SpVistaFacturasParaAbonar_Result> SpVistaFacturasParaAbonar(string idFactura)
        {
            var idFacturaParameter = idFactura != null ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaFacturasParaAbonar_Result>("SpVistaFacturasParaAbonar", idFacturaParameter);
        }
    
        public virtual ObjectResult<SpVistaLote_Result> SpVistaLote(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaLote_Result>("SpVistaLote", idProductoParameter);
        }
    
        public virtual ObjectResult<SpVistaOrdenesTrabajoAsignadasTecnicoServicioXEmpresa_Result> SpVistaOrdenesTrabajoAsignadasTecnicoServicioXEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaOrdenesTrabajoAsignadasTecnicoServicioXEmpresa_Result>("SpVistaOrdenesTrabajoAsignadasTecnicoServicioXEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spVistaOrdenesTrabajoTraslado_Result> spVistaOrdenesTrabajoTraslado(Nullable<int> idBodega)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVistaOrdenesTrabajoTraslado_Result>("spVistaOrdenesTrabajoTraslado", idBodegaParameter);
        }
    
        public virtual ObjectResult<SpVistaPagoProveedoresXEstado_Result> SpVistaPagoProveedoresXEstado(Nullable<int> idempresa, string estado)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaPagoProveedoresXEstado_Result>("SpVistaPagoProveedoresXEstado", idempresaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SpVistaPermisosBodegaXEmpleado_Result> SpVistaPermisosBodegaXEmpleado(Nullable<int> idEmpresa, Nullable<int> idEmpleado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaPermisosBodegaXEmpleado_Result>("SpVistaPermisosBodegaXEmpleado", idEmpresaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SpVistaPermisosCuentas_Result> SpVistaPermisosCuentas(Nullable<int> id_cuenta, string sistema)
        {
            var id_cuentaParameter = id_cuenta.HasValue ?
                new ObjectParameter("id_cuenta", id_cuenta) :
                new ObjectParameter("id_cuenta", typeof(int));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaPermisosCuentas_Result>("SpVistaPermisosCuentas", id_cuentaParameter, sistemaParameter);
        }
    
        public virtual ObjectResult<SpVistaPrecioCombo_Result> SpVistaPrecioCombo(Nullable<int> idCombo)
        {
            var idComboParameter = idCombo.HasValue ?
                new ObjectParameter("IdCombo", idCombo) :
                new ObjectParameter("IdCombo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaPrecioCombo_Result>("SpVistaPrecioCombo", idComboParameter);
        }
    
        public virtual ObjectResult<SpVistaProductosXEmpresa_Result> SpVistaProductosXEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaProductosXEmpresa_Result>("SpVistaProductosXEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpVistaProductosXEmpresaXManejoLote_Result> SpVistaProductosXEmpresaXManejoLote(Nullable<int> idEmpresa, Nullable<bool> manejaLote)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var manejaLoteParameter = manejaLote.HasValue ?
                new ObjectParameter("ManejaLote", manejaLote) :
                new ObjectParameter("ManejaLote", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaProductosXEmpresaXManejoLote_Result>("SpVistaProductosXEmpresaXManejoLote", idEmpresaParameter, manejaLoteParameter);
        }
    
        public virtual ObjectResult<SpVistaStockXProducto_Result> SpVistaStockXProducto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaStockXProducto_Result>("SpVistaStockXProducto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<SpVistaTrabajosExternosXEmpresa_Result> SpVistaTrabajosExternosXEmpresa(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpVistaTrabajosExternosXEmpresa_Result>("SpVistaTrabajosExternosXEmpresa", idempresaParameter);
        }
    
        public virtual ObjectResult<UspCS_DetalleCompra_Result> UspCS_DetalleCompra(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspCS_DetalleCompra_Result>("UspCS_DetalleCompra", idCompraParameter);
        }
    
        public virtual ObjectResult<UspDatosDocumento_Result> UspDatosDocumento(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspDatosDocumento_Result>("UspDatosDocumento", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspDocumentoReserva_Result> UspDocumentoReserva(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspDocumentoReserva_Result>("UspDocumentoReserva", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspGetCombosEnStock_Result> UspGetCombosEnStock(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetCombosEnStock_Result>("UspGetCombosEnStock", idEmpresaParameter);
        }
    
        public virtual ObjectResult<UspGetCombosEnStockXBodega_Result> UspGetCombosEnStockXBodega(Nullable<int> idEmpresa, Nullable<int> idBodega)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetCombosEnStockXBodega_Result>("UspGetCombosEnStockXBodega", idEmpresaParameter, idBodegaParameter);
        }
    
        public virtual ObjectResult<UspGetDatosAnulacionCompra_Result> UspGetDatosAnulacionCompra(Nullable<int> idAnulacion)
        {
            var idAnulacionParameter = idAnulacion.HasValue ?
                new ObjectParameter("IdAnulacion", idAnulacion) :
                new ObjectParameter("IdAnulacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDatosAnulacionCompra_Result>("UspGetDatosAnulacionCompra", idAnulacionParameter);
        }
    
        public virtual ObjectResult<UspGetDatosCompra_Result> UspGetDatosCompra(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDatosCompra_Result>("UspGetDatosCompra", idCompraParameter);
        }
    
        public virtual ObjectResult<UspGetDetalleDocumento_Result> UspGetDetalleDocumento(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDetalleDocumento_Result>("UspGetDetalleDocumento", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspGetDetalleDocumentoReserva_Result> UspGetDetalleDocumentoReserva(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDetalleDocumentoReserva_Result>("UspGetDetalleDocumentoReserva", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspGetDetallesCompra_Result> UspGetDetallesCompra(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDetallesCompra_Result>("UspGetDetallesCompra", idCompraParameter);
        }
    
        public virtual ObjectResult<UspGetIdentificadorDocumento_Result> UspGetIdentificadorDocumento(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetIdentificadorDocumento_Result>("UspGetIdentificadorDocumento", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspGetLoteDocumento_Result> UspGetLoteDocumento(Nullable<int> idDocumento, string documento)
        {
            var idDocumentoParameter = idDocumento.HasValue ?
                new ObjectParameter("IdDocumento", idDocumento) :
                new ObjectParameter("IdDocumento", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetLoteDocumento_Result>("UspGetLoteDocumento", idDocumentoParameter, documentoParameter);
        }
    
        public virtual ObjectResult<UspGetProductosAgotados_Result> UspGetProductosAgotados(Nullable<int> idBodega)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetProductosAgotados_Result>("UspGetProductosAgotados", idBodegaParameter);
        }
    
        public virtual ObjectResult<UspGetProductosAgotadosXEmpresa_Result> UspGetProductosAgotadosXEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetProductosAgotadosXEmpresa_Result>("UspGetProductosAgotadosXEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<UspListaDatosDocumento_Result> UspListaDatosDocumento(string documento, Nullable<int> idEmpresa)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspListaDatosDocumento_Result>("UspListaDatosDocumento", documentoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<UspProductosSinCompras_Result> UspProductosSinCompras(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspProductosSinCompras_Result>("UspProductosSinCompras", idEmpresaParameter);
        }
    
        public virtual int UspRecalcularCostePromedioPonderado(Nullable<int> idProducto, Nullable<int> idBodega)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspRecalcularCostePromedioPonderado", idProductoParameter, idBodegaParameter);
        }
    
        public virtual ObjectResult<Vw_EntradaBodega_Result> Vw_EntradaBodega(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vw_EntradaBodega_Result>("Vw_EntradaBodega", idCompraParameter);
        }
    
        public virtual ObjectResult<Vw_Reserva_Result> Vw_Reserva(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vw_Reserva_Result>("Vw_Reserva", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Vw_ReservaTotalizadaXProducto_Result> Vw_ReservaTotalizadaXProducto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vw_ReservaTotalizadaXProducto_Result>("Vw_ReservaTotalizadaXProducto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<VwIdentificadorEnBodega_Result> VwIdentificadorEnBodega(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwIdentificadorEnBodega_Result>("VwIdentificadorEnBodega", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwIdentificadorEnBodegaSeleccionable_Result> VwIdentificadorEnBodegaSeleccionable(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwIdentificadorEnBodegaSeleccionable_Result>("VwIdentificadorEnBodegaSeleccionable", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwIdentificadorXPrefacturaOT_Result> VwIdentificadorXPrefacturaOT(Nullable<int> idPrefactura, Nullable<int> idProducto)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwIdentificadorXPrefacturaOT_Result>("VwIdentificadorXPrefacturaOT", idPrefacturaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwIdentificadorXPrefacturaPV_Result> VwIdentificadorXPrefacturaPV(Nullable<int> idPrefactura, Nullable<int> idProducto)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwIdentificadorXPrefacturaPV_Result>("VwIdentificadorXPrefacturaPV", idPrefacturaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwKardexBodegaProducto_Result> VwKardexBodegaProducto(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwKardexBodegaProducto_Result>("VwKardexBodegaProducto", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwKardexTotalizadoXBodega_Result> VwKardexTotalizadoXBodega(Nullable<int> idBodega, string moneda)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwKardexTotalizadoXBodega_Result>("VwKardexTotalizadoXBodega", idBodegaParameter, monedaParameter);
        }
    
        public virtual ObjectResult<VwLoteEnBodega_Result> VwLoteEnBodega(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwLoteEnBodega_Result>("VwLoteEnBodega", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwLoteEnBodegaSeleccionable_Result> VwLoteEnBodegaSeleccionable(Nullable<int> idBodega, Nullable<int> idProducto)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("IdBodega", idBodega) :
                new ObjectParameter("IdBodega", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwLoteEnBodegaSeleccionable_Result>("VwLoteEnBodegaSeleccionable", idBodegaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwLoteXPrefacturaOT_Result> VwLoteXPrefacturaOT(Nullable<int> id_prefactura, Nullable<int> id_Producto, string modo)
        {
            var id_prefacturaParameter = id_prefactura.HasValue ?
                new ObjectParameter("Id_prefactura", id_prefactura) :
                new ObjectParameter("Id_prefactura", typeof(int));
    
            var id_ProductoParameter = id_Producto.HasValue ?
                new ObjectParameter("Id_Producto", id_Producto) :
                new ObjectParameter("Id_Producto", typeof(int));
    
            var modoParameter = modo != null ?
                new ObjectParameter("Modo", modo) :
                new ObjectParameter("Modo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwLoteXPrefacturaOT_Result>("VwLoteXPrefacturaOT", id_prefacturaParameter, id_ProductoParameter, modoParameter);
        }
    
        public virtual ObjectResult<VwLoteXPrefacturaPV_Result> VwLoteXPrefacturaPV(Nullable<int> idPrefactura, Nullable<int> idProducto)
        {
            var idPrefacturaParameter = idPrefactura.HasValue ?
                new ObjectParameter("IdPrefactura", idPrefactura) :
                new ObjectParameter("IdPrefactura", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwLoteXPrefacturaPV_Result>("VwLoteXPrefacturaPV", idPrefacturaParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<VwObtenerCotizacionvsPrefactura_Result> VwObtenerCotizacionvsPrefactura(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwObtenerCotizacionvsPrefactura_Result>("VwObtenerCotizacionvsPrefactura", idEmpresaParameter);
        }
    
        public virtual ObjectResult<VwVacacionesEmpleados_Result> VwVacacionesEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VwVacacionesEmpleados_Result>("VwVacacionesEmpleados");
        }
    }
}
